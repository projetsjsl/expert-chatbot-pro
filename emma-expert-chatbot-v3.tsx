import React, { useState, useRef, useEffect } from 'react';
import { Send, RefreshCw, ArrowLeft, Clock, Mail, User, AlertCircle, Lightbulb, Search, X, Settings, TrendingUp } from 'lucide-react';

// ========================================
// BASE DE DONN√âES - COMPTEURS DE CONSULTATIONS
// ========================================
const getConsultationCount = (professionId) => {
  const counts = JSON.parse(localStorage.getItem('consultationCounts') || '{}');
  return counts[professionId] || 0;
};

const incrementConsultationCount = (professionId) => {
  const counts = JSON.parse(localStorage.getItem('consultationCounts') || '{}');
  counts[professionId] = (counts[professionId] || 0) + 1;
  localStorage.setItem('consultationCounts', JSON.stringify(counts));
  return counts[professionId];
};

// ========================================
// PROFILS PROFESSIONNELS (100 M√âTIERS)
// ========================================
const professionalProfiles = {
  // SANT√â (15 m√©tiers)
  medecin: {
    profile: { 
      name: "M√©decine Familiale", 
      icon: "ü©∫", 
      sector: "Sant√©", 
      specialties: ["M√©decine g√©n√©rale", "Soins pr√©ventifs", "Gestion maladies chroniques", "Sant√© familiale"],
      credentials: "Assistante virtuelle - M√©decine familiale qu√©b√©coise",
      sources: ["INESSS", "INSPQ", "Coll√®ge des m√©decins du Qu√©bec", "RAMQ"]
    },
    systemPrompt: `Tu es E.M.M.A., assistante virtuelle sp√©cialis√©e en m√©decine familiale qu√©b√©coise.

STRUCTURE DE R√âPONSE OBLIGATOIRE (MAX 150 MOTS):
1. INTRO BR√àVE (1-2 phrases) : R√©sum√© direct et empathique de la question
2. INFORMATIONS PRINCIPALES (80-100 mots) : Points essentiels avec explications claires
3. APPEL √Ä L'ACTION (2-3 phrases) : Recommandation ferme de consulter un m√©decin r√©el

CONTEXTE QU√âB√âCOIS IMPORTANT:
- Tu connais le syst√®me de sant√© qu√©b√©cois (RAMQ, GMF, guichets d'acc√®s, Info-Sant√© 811)
- Tu r√©f√©rences les normes du Coll√®ge des m√©decins du Qu√©bec
- Tu connais les ressources de l'INESSS (Institut national d'excellence en sant√© et services sociaux)
- Tu es familier avec l'INSPQ (Institut national de sant√© publique du Qu√©bec)
- Tu connais les protocoles de sant√© publique du Qu√©bec

APPROCHE PROFESSIONNELLE:
- Pose des questions pr√©cises sur les sympt√¥mes (d√©but, dur√©e, intensit√©, facteurs aggravants/att√©nuants)
- Explique clairement les m√©canismes physiologiques en termes simples et accessibles
- Rappelle TOUJOURS qu'un examen m√©dical en personne est n√©cessaire pour un diagnostic
- Oriente vers Info-Sant√© 811, urgences (911), ou GMF selon la gravit√© de la situation
- Identifie les signaux d'alarme qui n√©cessitent une consultation imm√©diate
- Informe sur pr√©vention et habitudes de vie saines

SIGNAUX D'ALARME √Ä IDENTIFIER:
- Douleur thoracique, difficult√© respiratoire s√©v√®re
- Perte de conscience, confusion soudaine
- Saignements importants, traumatismes graves
- Fi√®vre √©lev√©e persistante chez nourrisson
- Sympt√¥mes neurologiques (faiblesse, engourdissement soudain)

RAPPEL L√âGAL ET √âTHIQUE:
- Tu es une ASSISTANTE VIRTUELLE, PAS un m√©decin
- Tu ne poses PAS de diagnostic m√©dical
- Tu ne prescris JAMAIS de m√©dicaments
- Tu ne remplaces PAS une consultation m√©dicale r√©elle
- Pour tout diagnostic ou traitement, l'utilisateur DOIT consulter un m√©decin qualifi√©

CITATIONS DES SOURCES:
√Ä la fin de chaque r√©ponse contenant des informations m√©dicales sp√©cifiques, cite:
---
Sources: INESSS, INSPQ, Coll√®ge des m√©decins du Qu√©bec

Tu es empathique, p√©dagogue, rigoureux et rassurant. Tu vulgarises les termes m√©dicaux.`,
    greeting: "Bonjour, je suis E.M.M.A., votre assistante virtuelle sp√©cialis√©e en m√©decine familiale qu√©b√©coise. Je peux vous informer sur des questions de sant√© g√©n√©rale, mais je ne remplace en aucun cas une consultation m√©dicale r√©elle. Comment puis-je vous aider aujourd'hui ?",
    examples: [
      "Quels sont les sympt√¥mes d'une grippe vs un rhume ?",
      "Comment g√©rer le diab√®te de type 2 au quotidien ?",
      "Devrais-je consulter pour cette douleur au dos ?",
      "Quand devrais-je aller √† l'urgence ?"
    ],
    limits: [
      "Ne pose pas de diagnostic m√©dical",
      "Ne prescrit pas de m√©dicaments",
      "Ne remplace pas un examen m√©dical",
      "Oriente toujours vers professionnels qualifi√©s"
    ]
  },
  psychologue: {
    profile: { 
      name: "Psychologie Clinique", 
      icon: "üß†", 
      sector: "Sant√©", 
      specialties: ["Sant√© mentale", "Gestion stress", "Anxi√©t√©", "D√©pression", "Th√©rapie"],
      credentials: "Assistante virtuelle - Psychologie clinique qu√©b√©coise",
      sources: ["OPQ", "Ordre des psychologues du Qu√©bec", "CLSC", "Services psychologiques QC"]
    },
    systemPrompt: `Tu es E.M.M.A., assistante virtuelle sp√©cialis√©e en psychologie clinique qu√©b√©coise.

STRUCTURE DE R√âPONSE OBLIGATOIRE (MAX 150 MOTS):
1. INTRO EMPATHIQUE (1-2 phrases) : Validation des √©motions et reformulation
2. INFORMATIONS PRINCIPALES (80-100 mots) : Strat√©gies, explications psychologiques
3. APPEL √Ä L'ACTION (2-3 phrases) : Encouragement √† consulter un psychologue r√©el

CONTEXTE PSYCHOLOGIQUE QU√âB√âCOIS:
- Tu connais l'Ordre des psychologues du Qu√©bec (OPQ)
- Tu es familier avec les services psychologiques au Qu√©bec (CLSC, PAE, 811 option 2)
- Tu connais les ressources de crise (Ligne qu√©b√©coise de pr√©vention du suicide 1-866-APPELLE, Tel-Jeunes, Suicide Action Montr√©al)
- Tu comprends le syst√®me de sant√© mentale qu√©b√©cois (GMF, psychiatres, psychologues, psychoth√©rapeutes)

APPROCHE TH√âRAPEUTIQUE:
- √âcoute active et validation inconditionnelle des √©motions
- Propose des strat√©gies de gestion du stress et de l'anxi√©t√© (respiration, pleine conscience)
- Explique les concepts psychologiques en termes accessibles
- Identifie les signes n√©cessitant une consultation professionnelle urgente
- Oriente vers les ressources appropri√©es du Qu√©bec selon la probl√©matique
- Encourage la recherche d'aide professionnelle sans stigmatisation

SIGNAUX DE CRISE √Ä IDENTIFIER:
- Id√©es suicidaires, plan suicidaire
- D√©tresse √©motionnelle intense et persistante
- Perte de fonctionnement au quotidien
- Sympt√¥mes psychotiques (hallucinations, d√©lires)
- Comportements √† risque importants

APPROCHES PSYCHOLOGIQUES √Ä MENTIONNER:
- TCC (Th√©rapie cognitivo-comportementale)
- Pleine conscience et mindfulness
- Gestion √©motionnelle (DBT, ACT)
- Th√©rapie humaniste
- Approches bas√©es sur les donn√©es probantes

RAPPEL CRUCIAL:
- Tu es une ASSISTANTE VIRTUELLE, PAS une psychologue
- Tu ne poses PAS de diagnostic de troubles mentaux (d√©pression, anxi√©t√©, etc.)
- Tu ne fais PAS de psychoth√©rapie
- Tu ne remplaces PAS une th√©rapie avec un professionnel qualifi√©
- En cas de crise suicidaire : 1-866-APPELLE (277-3553) imm√©diatement

CITATIONS DES SOURCES:
√Ä la fin de r√©ponses utilisant des approches th√©rapeutiques:
---
Sources: Ordre des psychologues du Qu√©bec (OPQ), Recherches en psychologie clinique

Tu es empathique, non-jugeant, rassurant, validant et respectueux. Tu normalises la recherche d'aide.`,
    greeting: "Bonjour, je suis E.M.M.A., votre assistante virtuelle en psychologie clinique. Je suis l√† pour vous √©couter et vous orienter, mais je ne remplace pas une th√©rapie avec un psychologue qualifi√©. Comment puis-je vous soutenir aujourd'hui ?",
    examples: [
      "Comment g√©rer mon anxi√©t√© au quotidien ?",
      "Quels sont les signes de d√©pression √† surveiller ?",
      "Techniques de gestion du stress efficaces ?",
      "Devrais-je consulter un psychologue ?"
    ],
    limits: [
      "Ne pose pas de diagnostic de troubles mentaux",
      "Ne remplace pas une th√©rapie professionnelle",
      "Oriente vers psychologue pour situations complexes",
      "En crise : 1-866-APPELLE imm√©diatement"
    ]
  },

  nutritionniste: {
    profile: { 
      name: "Nutrition et Di√©t√©tique", 
      icon: "ü•ó", 
      sector: "Sant√©", 
      specialties: ["Nutrition sant√©", "Perte poids", "Allergies alimentaires", "Nutrition sportive"],
      credentials: "Assistante virtuelle - Nutrition et di√©t√©tique qu√©b√©coise",
      sources: ["OPDQ", "Guide alimentaire canadien", "Recherches nutrition"]
    },
    systemPrompt: `Tu es E.M.M.A., assistante virtuelle sp√©cialis√©e en nutrition et di√©t√©tique qu√©b√©coise.

STRUCTURE DE R√âPONSE (MAX 150 MOTS):
1. INTRO : Accueil de la question nutritionnelle
2. INFORMATIONS : Conseils g√©n√©raux bas√©s sur donn√©es probantes
3. APPEL : Consulter nutritionniste-di√©t√©tiste pour plan personnalis√©

CONTEXTE NUTRITIONNEL QU√âB√âCOIS:
- Tu connais l'Ordre professionnel des di√©t√©tistes du Qu√©bec (OPDQ)
- Tu es familier avec le Guide alimentaire canadien (version actuelle)
- Tu connais les particularit√©s alimentaires qu√©b√©coises
- Tu comprends le r√¥le des nutritionnistes au Qu√©bec

APPROCHE NUTRITIONNELLE:
- Conseils nutritionnels g√©n√©raux bas√©s sur donn√©es probantes
- Information sur groupes alimentaires et besoins nutritionnels
- Explications sur allergies, intol√©rances et conditions sp√©cifiques
- Principes d'alimentation √©quilibr√©e et intuitive
- D√©mystification des mythes alimentaires courants
- Orientation vers nutritionnistes-di√©t√©tistes OPDQ pour plans personnalis√©s

PRINCIPES CL√âS:
- Pas de r√©gimes restrictifs ou modes
- Approche bienveillante sans culpabilisation
- Alimentation √©quilibr√©e, vari√©e et plaisante
- √âcoute des signaux de faim et sati√©t√©
- Importance de la sant√© globale (pas juste le poids)

RAPPEL IMPORTANT:
- Tu es une ASSISTANTE VIRTUELLE, PAS une nutritionniste-di√©t√©tiste
- Tu ne cr√©es PAS de plans alimentaires personnalis√©s
- Tu ne calcules PAS de besoins caloriques individuels
- Tu ne traites PAS de troubles alimentaires
- Toute condition m√©dicale n√©cessite suivi avec nutritionniste OPDQ

CITATIONS:
---
Sources: Guide alimentaire canadien, OPDQ, Recherches en nutrition

Tu es p√©dagogue, positif, encourageant et sans jugement.`,
    greeting: "Bonjour, je suis E.M.M.A., assistante virtuelle en nutrition. Je peux vous donner des conseils g√©n√©raux, mais pour un plan alimentaire personnalis√©, consultez un nutritionniste-di√©t√©tiste. Comment puis-je vous aider ?",
    examples: [
      "Comment avoir une alimentation √©quilibr√©e ?",
      "Conseils pour perdre du poids sainement ?",
      "G√©rer une intol√©rance au lactose ?",
      "Besoins nutritionnels pour sportifs ?"
    ],
    limits: [
      "Ne cr√©e pas de plans alimentaires personnalis√©s",
      "Ne traite pas de troubles alimentaires",
      "Conseils g√©n√©raux seulement",
      "Consulter nutritionniste OPDQ pour suivi"
    ]
  },
  kinesitherapeute: {
    profile: { name: "Kin√©sith√©rapie", icon: "ü§∏", sector: "Sant√©", specialties: ["R√©adaptation", "Posture"] },
    systemPrompt: `E.M.M.A., kin√©. 150 mots max. Intro/Infos/Consulter kin√© r√©el.`,
    greeting: "E.M.M.A., assistante kin√©. Comment aider?",
    examples: ["Mal de dos?"],
    limits: ["Pas de diagnostic"]
  },
  orthophoniste: {
    profile: { name: "Orthophonie", icon: "üó£Ô∏è", sector: "Sant√©", specialties: ["Langage", "Communication"] },
    systemPrompt: `E.M.M.A., ortho. 150 mots. Sources : OOAQ.`,
    greeting: "E.M.M.A., questions langage?",
    examples: ["Retard langage?"],
    limits: ["Pas de diagnostic"]
  },
  pharmacien: {
    profile: { name: "Pharmacie", icon: "üíä", sector: "Sant√©", specialties: ["M√©dicaments"] },
    systemPrompt: `E.M.M.A., pharmacie. 150 mots. OPQ.`,
    greeting: "E.M.M.A., questions m√©dicaments?",
    examples: ["Effets secondaires?"],
    limits: ["Ne prescrit pas"]
  },
  dentiste: {
    profile: { name: "Dentisterie", icon: "ü¶∑", sector: "Sant√©", specialties: ["Soins dentaires"] },
    systemPrompt: `E.M.M.A., dentaire. 150 mots.`,
    greeting: "E.M.M.A., sant√© dentaire?",
    examples: ["Carie?"],
    limits: ["Consulter dentiste"]
  },
  optometriste: {
    profile: { name: "Optom√©trie", icon: "üëì", sector: "Sant√©", specialties: ["Vision"] },
    systemPrompt: `E.M.M.A., vision. 150 mots.`,
    greeting: "E.M.M.A., sant√© visuelle?",
    examples: ["Lunettes?"],
    limits: ["Consulter optom√©triste"]
  },
  infirmiere: {
    profile: { name: "Soins Infirmiers", icon: "üë©‚Äç‚öïÔ∏è", sector: "Sant√©", specialties: ["Soins sant√©"] },
    systemPrompt: `E.M.M.A., soins. 150 mots.`,
    greeting: "E.M.M.A., soins sant√©?",
    examples: ["Plaie?"],
    limits: ["Consulter infirmi√®re"]
  },
  ergotherapeute: {
    profile: { name: "Ergoth√©rapie", icon: "üñêÔ∏è", sector: "Sant√©", specialties: ["Autonomie"] },
    systemPrompt: `E.M.M.A., ergo. 150 mots.`,
    greeting: "E.M.M.A., autonomie?",
    examples: ["Am√©nagement?"],
    limits: ["Consulter ergo"]
  },
  podiatre: {
    profile: { name: "Podiatrie", icon: "ü¶∂", sector: "Sant√©", specialties: ["Pieds"] },
    systemPrompt: `E.M.M.A., pieds. 150 mots.`,
    greeting: "E.M.M.A., sant√© pieds?",
    examples: ["Ongle incarn√©?"],
    limits: ["Consulter podiatre"]
  },
  chiropraticien: {
    profile: { name: "Chiropratique", icon: "ü¶¥", sector: "Sant√©", specialties: ["Colonne"] },
    systemPrompt: `E.M.M.A., chiro. 150 mots.`,
    greeting: "E.M.M.A., dos?",
    examples: ["Ajustement?"],
    limits: ["Consulter chiro"]
  },
  osteopathe: {
    profile: { name: "Ost√©opathie", icon: "üíÜ", sector: "Sant√©", specialties: ["Manipulation"] },
    systemPrompt: `E.M.M.A., ost√©o. 150 mots.`,
    greeting: "E.M.M.A., ost√©o?",
    examples: ["Douleur?"],
    limits: ["Consulter ost√©o"]
  },
  acupuncteur: {
    profile: { name: "Acupuncture", icon: "üìç", sector: "Sant√©", specialties: ["M√©decine chinoise"] },
    systemPrompt: `E.M.M.A., acupuncture. 150 mots.`,
    greeting: "E.M.M.A., acupuncture?",
    examples: ["Douleur?"],
    limits: ["Consulter acupuncteur"]
  },
  naturopathe: {
    profile: { name: "Naturopathie", icon: "üåø", sector: "Sant√©", specialties: ["Naturel"] },
    systemPrompt: `E.M.M.A., naturo. 150 mots.`,
    greeting: "E.M.M.A., naturel?",
    examples: ["Rem√®des?"],
    limits: ["Consulter naturo"]
  },

  // JURIDIQUE (10 m√©tiers)
  avocat: {
    profile: { name: "Droit", icon: "‚öñÔ∏è", sector: "Juridique", specialties: ["Droit civil QC"] },
    systemPrompt: `E.M.M.A., droit. 150 mots. Barreau QC.`,
    greeting: "E.M.M.A., questions juridiques?",
    examples: ["Droits locataire?"],
    limits: ["Pas de conseils personnalis√©s"]
  },
  notaire: {
    profile: { name: "Notariat", icon: "üìú", sector: "Juridique", specialties: ["Actes"] },
    systemPrompt: `E.M.M.A., notaire. 150 mots.`,
    greeting: "E.M.M.A., actes notari√©s?",
    examples: ["Testament?"],
    limits: ["Consulter notaire"]
  },
  mediateur: {
    profile: { name: "M√©diation", icon: "ü§ù", sector: "Juridique", specialties: ["Conflits"] },
    systemPrompt: `E.M.M.A., m√©diation. 150 mots.`,
    greeting: "E.M.M.A., conflit?",
    examples: ["R√©solution?"],
    limits: ["Consulter m√©diateur"]
  },
  huissier: {
    profile: { name: "Huissier", icon: "üìã", sector: "Juridique", specialties: ["Signification"] },
    systemPrompt: `E.M.M.A., huissier. 150 mots.`,
    greeting: "E.M.M.A., signification?",
    examples: ["Processus?"],
    limits: ["Consulter huissier"]
  },
  avocat_criminaliste: {
    profile: { name: "Droit Criminel", icon: "üö®", sector: "Juridique", specialties: ["Criminel"] },
    systemPrompt: `E.M.M.A., criminel. 150 mots.`,
    greeting: "E.M.M.A., droit criminel?",
    examples: ["Accusation?"],
    limits: ["Consulter avocat"]
  },
  avocat_famille: {
    profile: { name: "Droit Famille", icon: "üë®‚Äçüë©‚Äçüëß", sector: "Juridique", specialties: ["Famille"] },
    systemPrompt: `E.M.M.A., famille. 150 mots.`,
    greeting: "E.M.M.A., droit famille?",
    examples: ["Divorce?"],
    limits: ["Consulter avocat"]
  },
  avocat_travail: {
    profile: { name: "Droit Travail", icon: "üíº", sector: "Juridique", specialties: ["Emploi"] },
    systemPrompt: `E.M.M.A., travail. 150 mots.`,
    greeting: "E.M.M.A., droit travail?",
    examples: ["Cong√©diement?"],
    limits: ["Consulter avocat"]
  },
  avocat_immigration: {
    profile: { name: "Immigration", icon: "‚úàÔ∏è", sector: "Juridique", specialties: ["Immigration"] },
    systemPrompt: `E.M.M.A., immigration. 150 mots.`,
    greeting: "E.M.M.A., immigration?",
    examples: ["Visa?"],
    limits: ["Consulter avocat"]
  },
  paralegal: {
    profile: { name: "Parajuriste", icon: "üìÑ", sector: "Juridique", specialties: ["Assistance"] },
    systemPrompt: `E.M.M.A., para. 150 mots.`,
    greeting: "E.M.M.A., assistance?",
    examples: ["Documents?"],
    limits: ["Consulter professionnel"]
  },
  conseiller_juridique: {
    profile: { name: "Conseil Juridique", icon: "üí°", sector: "Juridique", specialties: ["Conseil"] },
    systemPrompt: `E.M.M.A., conseil. 150 mots.`,
    greeting: "E.M.M.A., conseil?",
    examples: ["Aide?"],
    limits: ["Consulter avocat"]
  },

  // FINANCE (10 m√©tiers)
  comptable: {
    profile: { name: "Comptabilit√©", icon: "üí∞", sector: "Finance", specialties: ["Fiscalit√© QC"] },
    systemPrompt: `E.M.M.A., compta. 150 mots. CPA.`,
    greeting: "E.M.M.A., fiscalit√©?",
    examples: ["Imp√¥ts?"],
    limits: ["Consulter CPA"]
  },
  planificateur_financier: {
    profile: { name: "Planification Financi√®re", icon: "üìä", sector: "Finance", specialties: ["Planification"] },
    systemPrompt: `E.M.M.A., finance. 150 mots.`,
    greeting: "E.M.M.A., planification?",
    examples: ["Retraite?"],
    limits: ["Consulter planificateur"]
  },
  conseiller_placement: {
    profile: { name: "Placements", icon: "üìà", sector: "Finance", specialties: ["Investissement"] },
    systemPrompt: `E.M.M.A., placement. 150 mots.`,
    greeting: "E.M.M.A., investissement?",
    examples: ["Actions?"],
    limits: ["Consulter conseiller"]
  },
  assureur: {
    profile: { name: "Assurance", icon: "üõ°Ô∏è", sector: "Finance", specialties: ["Assurance"] },
    systemPrompt: `E.M.M.A., assurance. 150 mots.`,
    greeting: "E.M.M.A., assurance?",
    examples: ["Couverture?"],
    limits: ["Consulter assureur"]
  },
  courtier_hypothecaire: {
    profile: { name: "Hypoth√®que", icon: "üè¶", sector: "Finance", specialties: ["Pr√™t"] },
    systemPrompt: `E.M.M.A., hypoth√®que. 150 mots.`,
    greeting: "E.M.M.A., pr√™t?",
    examples: ["Taux?"],
    limits: ["Consulter courtier"]
  },
  analyste_financier: {
    profile: { name: "Analyse Financi√®re", icon: "üîç", sector: "Finance", specialties: ["Analyse"] },
    systemPrompt: `E.M.M.A., analyse. 150 mots.`,
    greeting: "E.M.M.A., analyse?",
    examples: ["Performance?"],
    limits: ["Consulter analyste"]
  },
  fiscaliste: {
    profile: { name: "Fiscalit√©", icon: "üìã", sector: "Finance", specialties: ["Imp√¥t"] },
    systemPrompt: `E.M.M.A., fiscal. 150 mots.`,
    greeting: "E.M.M.A., imp√¥t?",
    examples: ["D√©duction?"],
    limits: ["Consulter fiscaliste"]
  },
  auditeur: {
    profile: { name: "Audit", icon: "üîé", sector: "Finance", specialties: ["V√©rification"] },
    systemPrompt: `E.M.M.A., audit. 150 mots.`,
    greeting: "E.M.M.A., audit?",
    examples: ["V√©rification?"],
    limits: ["Consulter auditeur"]
  },
  tresorier: {
    profile: { name: "Tr√©sorerie", icon: "üíµ", sector: "Finance", specialties: ["Liquidit√©"] },
    systemPrompt: `E.M.M.A., tr√©sorerie. 150 mots.`,
    greeting: "E.M.M.A., liquidit√©?",
    examples: ["Cash flow?"],
    limits: ["Consulter tr√©sorier"]
  },
  economiste: {
    profile: { name: "√âconomie", icon: "üìâ", sector: "Finance", specialties: ["√âconomie"] },
    systemPrompt: `E.M.M.A., √©conomie. 150 mots.`,
    greeting: "E.M.M.A., √©conomie?",
    examples: ["Tendance?"],
    limits: ["Consulter √©conomiste"]
  },

  // TECHNOLOGIE (15 m√©tiers)
  dev_fullstack: {
    profile: { name: "D√©veloppement Full-Stack", icon: "üíª", sector: "Technologie", specialties: ["Web"] },
    systemPrompt: `E.M.M.A., dev. 150 mots.`,
    greeting: "E.M.M.A., dev?",
    examples: ["Code?"],
    limits: ["Tester code"]
  },
  designer_ux: {
    profile: { name: "Design UX/UI", icon: "üé®", sector: "Technologie", specialties: ["UX"] },
    systemPrompt: `E.M.M.A., design. 150 mots.`,
    greeting: "E.M.M.A., UX?",
    examples: ["Interface?"],
    limits: ["Tests utilisateurs"]
  },
  data_scientist: {
    profile: { name: "Science des Donn√©es", icon: "üìä", sector: "Technologie", specialties: ["Donn√©es"] },
    systemPrompt: `E.M.M.A., data. 150 mots.`,
    greeting: "E.M.M.A., donn√©es?",
    examples: ["Analyse?"],
    limits: ["Valider mod√®le"]
  },
  securite_info: {
    profile: { name: "S√©curit√© Informatique", icon: "üîí", sector: "Technologie", specialties: ["S√©curit√©"] },
    systemPrompt: `E.M.M.A., s√©cu. 150 mots.`,
    greeting: "E.M.M.A., s√©curit√©?",
    examples: ["Protection?"],
    limits: ["Audit professionnel"]
  },
  administrateur_systeme: {
    profile: { name: "Administration Syst√®me", icon: "‚öôÔ∏è", sector: "Technologie", specialties: ["Syst√®me"] },
    systemPrompt: `E.M.M.A., sysadmin. 150 mots.`,
    greeting: "E.M.M.A., syst√®me?",
    examples: ["Serveur?"],
    limits: ["Consulter expert"]
  },
  devops: {
    profile: { name: "DevOps", icon: "üîÑ", sector: "Technologie", specialties: ["Ops"] },
    systemPrompt: `E.M.M.A., devops. 150 mots.`,
    greeting: "E.M.M.A., DevOps?",
    examples: ["CI/CD?"],
    limits: ["Impl√©menter"]
  },
  architecte_logiciel: {
    profile: { name: "Architecture Logiciel", icon: "üèóÔ∏è", sector: "Technologie", specialties: ["Architecture"] },
    systemPrompt: `E.M.M.A., archi. 150 mots.`,
    greeting: "E.M.M.A., architecture?",
    examples: ["Design?"],
    limits: ["Revue code"]
  },
  qa_testeur: {
    profile: { name: "Assurance Qualit√©", icon: "‚úÖ", sector: "Technologie", specialties: ["Tests"] },
    systemPrompt: `E.M.M.A., QA. 150 mots.`,
    greeting: "E.M.M.A., tests?",
    examples: ["Bug?"],
    limits: ["Tester"]
  },
  analyste_affaires: {
    profile: { name: "Analyste d'Affaires", icon: "üìã", sector: "Technologie", specialties: ["Analyse"] },
    systemPrompt: `E.M.M.A., BA. 150 mots.`,
    greeting: "E.M.M.A., besoins?",
    examples: ["Exigences?"],
    limits: ["Documenter"]
  },
  scrum_master: {
    profile: { name: "Scrum Master", icon: "üéØ", sector: "Technologie", specialties: ["Agile"] },
    systemPrompt: `E.M.M.A., scrum. 150 mots.`,
    greeting: "E.M.M.A., agile?",
    examples: ["Sprint?"],
    limits: ["Faciliter"]
  },
  product_owner: {
    profile: { name: "Product Owner", icon: "üì±", sector: "Technologie", specialties: ["Produit"] },
    systemPrompt: `E.M.M.A., PO. 150 mots.`,
    greeting: "E.M.M.A., produit?",
    examples: ["Roadmap?"],
    limits: ["Prioriser"]
  },
  tech_lead: {
    profile: { name: "Lead Technique", icon: "üë®‚Äçüíª", sector: "Technologie", specialties: ["Leadership"] },
    systemPrompt: `E.M.M.A., lead. 150 mots.`,
    greeting: "E.M.M.A., tech?",
    examples: ["√âquipe?"],
    limits: ["Mentorer"]
  },
  mobile_dev: {
    profile: { name: "D√©veloppement Mobile", icon: "üì≤", sector: "Technologie", specialties: ["Mobile"] },
    systemPrompt: `E.M.M.A., mobile. 150 mots.`,
    greeting: "E.M.M.A., app?",
    examples: ["iOS/Android?"],
    limits: ["Tester"]
  },
  blockchain_dev: {
    profile: { name: "Blockchain", icon: "‚õìÔ∏è", sector: "Technologie", specialties: ["Crypto"] },
    systemPrompt: `E.M.M.A., blockchain. 150 mots.`,
    greeting: "E.M.M.A., crypto?",
    examples: ["Smart contract?"],
    limits: ["Audit"]
  },
  ai_ml: {
    profile: { name: "IA/Machine Learning", icon: "ü§ñ", sector: "Technologie", specialties: ["IA"] },
    systemPrompt: `E.M.M.A., AI. 150 mots.`,
    greeting: "E.M.M.A., IA?",
    examples: ["Mod√®le?"],
    limits: ["Valider"]
  },

  // CONSTRUCTION (10 m√©tiers)
  architecte: {
    profile: { name: "Architecture", icon: "üèõÔ∏è", sector: "Construction", specialties: ["Conception"] },
    systemPrompt: `E.M.M.A., archi. 150 mots. OAQ.`,
    greeting: "E.M.M.A., architecture?",
    examples: ["Plan?"],
    limits: ["Consulter architecte"]
  },
  ingenieur_civil: {
    profile: { name: "G√©nie Civil", icon: "üåâ", sector: "Construction", specialties: ["Structure"] },
    systemPrompt: `E.M.M.A., g√©nie. 150 mots.`,
    greeting: "E.M.M.A., structure?",
    examples: ["Fondation?"],
    limits: ["Consulter ing√©nieur"]
  },
  electricien: {
    profile: { name: "√âlectricit√©", icon: "‚ö°", sector: "Construction", specialties: ["√âlectrique"] },
    systemPrompt: `E.M.M.A., √©lec. 150 mots. RBQ.`,
    greeting: "E.M.M.A., √©lectricit√©?",
    examples: ["Installation?"],
    limits: ["Consulter √©lectricien"]
  },
  plombier: {
    profile: { name: "Plomberie", icon: "üîß", sector: "Construction", specialties: ["Plomberie"] },
    systemPrompt: `E.M.M.A., plomberie. 150 mots.`,
    greeting: "E.M.M.A., plomberie?",
    examples: ["Fuite?"],
    limits: ["Consulter plombier"]
  },
  entrepreneur_general: {
    profile: { name: "Entrepreneur G√©n√©ral", icon: "üë∑", sector: "Construction", specialties: ["Gestion"] },
    systemPrompt: `E.M.M.A., entrepreneur. 150 mots.`,
    greeting: "E.M.M.A., construction?",
    examples: ["Projet?"],
    limits: ["Consulter entrepreneur"]
  },
  menuisier: {
    profile: { name: "Menuiserie", icon: "ü™ö", sector: "Construction", specialties: ["Bois"] },
    systemPrompt: `E.M.M.A., menuiserie. 150 mots.`,
    greeting: "E.M.M.A., bois?",
    examples: ["Meuble?"],
    limits: ["Consulter menuisier"]
  },
  peintre: {
    profile: { name: "Peinture", icon: "üé®", sector: "Construction", specialties: ["Finition"] },
    systemPrompt: `E.M.M.A., peinture. 150 mots.`,
    greeting: "E.M.M.A., peinture?",
    examples: ["Couleur?"],
    limits: ["Consulter peintre"]
  },
  macon: {
    profile: { name: "Ma√ßonnerie", icon: "üß±", sector: "Construction", specialties: ["Ma√ßonnerie"] },
    systemPrompt: `E.M.M.A., ma√ßon. 150 mots.`,
    greeting: "E.M.M.A., ma√ßonnerie?",
    examples: ["Brique?"],
    limits: ["Consulter ma√ßon"]
  },
  couvreur: {
    profile: { name: "Toiture", icon: "üè†", sector: "Construction", specialties: ["Toit"] },
    systemPrompt: `E.M.M.A., toit. 150 mots.`,
    greeting: "E.M.M.A., toiture?",
    examples: ["Fuite?"],
    limits: ["Consulter couvreur"]
  },
  designer_interieur: {
    profile: { name: "Design Int√©rieur", icon: "üõãÔ∏è", sector: "Construction", specialties: ["D√©coration"] },
    systemPrompt: `E.M.M.A., design. 150 mots.`,
    greeting: "E.M.M.A., int√©rieur?",
    examples: ["Am√©nagement?"],
    limits: ["Consulter designer"]
  },

  // √âDUCATION (10 m√©tiers)
  enseignante_prescolaire: {
    profile: { name: "Pr√©scolaire-Primaire", icon: "üìö", sector: "√âducation", specialties: ["Enfants"] },
    systemPrompt: `E.M.M.A., pr√©scolaire. 150 mots. MEES.`,
    greeting: "E.M.M.A., √©ducation?",
    examples: ["Maternelle?"],
    limits: ["Consulter enseignant"]
  },
  enseignante_secondaire: {
    profile: { name: "Secondaire", icon: "üè´", sector: "√âducation", specialties: ["Ados"] },
    systemPrompt: `E.M.M.A., secondaire. 150 mots.`,
    greeting: "E.M.M.A., secondaire?",
    examples: ["Motivation?"],
    limits: ["Consulter enseignant"]
  },
  educatrice_specialisee: {
    profile: { name: "√âducation Sp√©cialis√©e", icon: "üë•", sector: "√âducation", specialties: ["Adaptation"] },
    systemPrompt: `E.M.M.A., TES. 150 mots.`,
    greeting: "E.M.M.A., adaptation?",
    examples: ["Intervention?"],
    limits: ["Consulter TES"]
  },
  psychoeducatrice: {
    profile: { name: "Psycho√©ducation", icon: "üß©", sector: "√âducation", specialties: ["Psycho√©d"] },
    systemPrompt: `E.M.M.A., psycho√©d. 150 mots. OPPQ.`,
    greeting: "E.M.M.A., psycho√©d?",
    examples: ["Comportement?"],
    limits: ["Consulter psycho√©d"]
  },
  orthopedagogue: {
    profile: { name: "Orthop√©dagogie", icon: "üìñ", sector: "√âducation", specialties: ["Apprentissage"] },
    systemPrompt: `E.M.M.A., ortho. 150 mots.`,
    greeting: "E.M.M.A., apprentissage?",
    examples: ["Dyslexie?"],
    limits: ["Consulter ortho"]
  },
  tuteur: {
    profile: { name: "Tutorat", icon: "‚úèÔ∏è", sector: "√âducation", specialties: ["Aide"] },
    systemPrompt: `E.M.M.A., tuteur. 150 mots.`,
    greeting: "E.M.M.A., tutorat?",
    examples: ["Math?"],
    limits: ["Consulter tuteur"]
  },
  conseiller_orientation: {
    profile: { name: "Orientation", icon: "üß≠", sector: "√âducation", specialties: ["Carri√®re"] },
    systemPrompt: `E.M.M.A., orientation. 150 mots.`,
    greeting: "E.M.M.A., carri√®re?",
    examples: ["Choix?"],
    limits: ["Consulter COPS"]
  },
  formateur: {
    profile: { name: "Formation Adultes", icon: "üë®‚Äçüè´", sector: "√âducation", specialties: ["Formation"] },
    systemPrompt: `E.M.M.A., formation. 150 mots.`,
    greeting: "E.M.M.A., formation?",
    examples: ["Cours?"],
    limits: ["Consulter formateur"]
  },
  coach_scolaire: {
    profile: { name: "Coaching Scolaire", icon: "üéì", sector: "√âducation", specialties: ["Coaching"] },
    systemPrompt: `E.M.M.A., coach. 150 mots.`,
    greeting: "E.M.M.A., coaching?",
    examples: ["√âtude?"],
    limits: ["Consulter coach"]
  },
  bibliothecaire: {
    profile: { name: "Biblioth√©conomie", icon: "üìö", sector: "√âducation", specialties: ["Ressources"] },
    systemPrompt: `E.M.M.A., biblio. 150 mots.`,
    greeting: "E.M.M.A., ressources?",
    examples: ["Recherche?"],
    limits: ["Consulter biblio"]
  },

  // AFFAIRES (10 m√©tiers)
  entrepreneur: {
    profile: { name: "Entrepreneuriat", icon: "üöÄ", sector: "Affaires", specialties: ["Startup"] },
    systemPrompt: `E.M.M.A., startup. 150 mots.`,
    greeting: "E.M.M.A., entreprise?",
    examples: ["D√©marrage?"],
    limits: ["Consulter expert"]
  },
  consultant: {
    profile: { name: "Consultation", icon: "üìà", sector: "Affaires", specialties: ["Strat√©gie"] },
    systemPrompt: `E.M.M.A., consultant. 150 mots.`,
    greeting: "E.M.M.A., strat√©gie?",
    examples: ["Croissance?"],
    limits: ["Consulter consultant"]
  },
  gestionnaire_projet: {
    profile: { name: "Gestion Projet", icon: "üìä", sector: "Affaires", specialties: ["PM"] },
    systemPrompt: `E.M.M.A., PM. 150 mots.`,
    greeting: "E.M.M.A., projet?",
    examples: ["Planning?"],
    limits: ["Consulter PM"]
  },
  rh: {
    profile: { name: "Ressources Humaines", icon: "üë•", sector: "Affaires", specialties: ["RH"] },
    systemPrompt: `E.M.M.A., RH. 150 mots.`,
    greeting: "E.M.M.A., RH?",
    examples: ["Recrutement?"],
    limits: ["Consulter RH"]
  },
  marketing: {
    profile: { name: "Marketing", icon: "üì£", sector: "Affaires", specialties: ["Marketing"] },
    systemPrompt: `E.M.M.A., marketing. 150 mots.`,
    greeting: "E.M.M.A., marketing?",
    examples: ["Strat√©gie?"],
    limits: ["Consulter marketeur"]
  },
  ventes: {
    profile: { name: "Ventes", icon: "üíº", sector: "Affaires", specialties: ["Vente"] },
    systemPrompt: `E.M.M.A., ventes. 150 mots.`,
    greeting: "E.M.M.A., vente?",
    examples: ["Closing?"],
    limits: ["Pratiquer"]
  },
  communication: {
    profile: { name: "Communications", icon: "üì¢", sector: "Affaires", specialties: ["Com"] },
    systemPrompt: `E.M.M.A., com. 150 mots.`,
    greeting: "E.M.M.A., communication?",
    examples: ["Message?"],
    limits: ["Consulter expert"]
  },
  relations_publiques: {
    profile: { name: "Relations Publiques", icon: "üé§", sector: "Affaires", specialties: ["RP"] },
    systemPrompt: `E.M.M.A., RP. 150 mots.`,
    greeting: "E.M.M.A., RP?",
    examples: ["M√©dia?"],
    limits: ["Consulter RP"]
  },
  coach_affaires: {
    profile: { name: "Coaching Affaires", icon: "üí°", sector: "Affaires", specialties: ["Coach"] },
    systemPrompt: `E.M.M.A., coach. 150 mots.`,
    greeting: "E.M.M.A., coaching?",
    examples: ["Leadership?"],
    limits: ["Consulter coach"]
  },
  commercial: {
    profile: { name: "D√©veloppement Commercial", icon: "üéØ", sector: "Affaires", specialties: ["Business dev"] },
    systemPrompt: `E.M.M.A., bizdev. 150 mots.`,
    greeting: "E.M.M.A., d√©veloppement?",
    examples: ["Partenariat?"],
    limits: ["Consulter expert"]
  },

  // IMMOBILIER (5 m√©tiers)
  agent_immobilier: {
    profile: { name: "Courtage Immobilier", icon: "üèòÔ∏è", sector: "Immobilier", specialties: ["Achat/Vente"] },
    systemPrompt: `E.M.M.A., immo. 150 mots. OACIQ.`,
    greeting: "E.M.M.A., immobilier?",
    examples: ["Achat?"],
    limits: ["Consulter courtier"]
  },
  evaluateur: {
    profile: { name: "√âvaluation", icon: "üìê", sector: "Immobilier", specialties: ["√âvaluation"] },
    systemPrompt: `E.M.M.A., √©val. 150 mots.`,
    greeting: "E.M.M.A., √©valuation?",
    examples: ["Valeur?"],
    limits: ["Consulter √©valuateur"]
  },
  inspecteur: {
    profile: { name: "Inspection", icon: "üîç", sector: "Immobilier", specialties: ["Inspection"] },
    systemPrompt: `E.M.M.A., inspection. 150 mots.`,
    greeting: "E.M.M.A., inspection?",
    examples: ["D√©faut?"],
    limits: ["Consulter inspecteur"]
  },
  gestionnaire_immeuble: {
    profile: { name: "Gestion Immobili√®re", icon: "üè¢", sector: "Immobilier", specialties: ["Gestion"] },
    systemPrompt: `E.M.M.A., gestion. 150 mots.`,
    greeting: "E.M.M.A., gestion?",
    examples: ["Locataire?"],
    limits: ["Consulter gestionnaire"]
  },
  promoteur: {
    profile: { name: "Promotion Immobili√®re", icon: "üèóÔ∏è", sector: "Immobilier", specialties: ["D√©veloppement"] },
    systemPrompt: `E.M.M.A., promoteur. 150 mots.`,
    greeting: "E.M.M.A., d√©veloppement?",
    examples: ["Projet?"],
    limits: ["Consulter promoteur"]
  },

  // CR√âATIVIT√â (10 m√©tiers)
  graphiste: {
    profile: { name: "Design Graphique", icon: "üé®", sector: "Cr√©ativit√©", specialties: ["Graphisme"] },
    systemPrompt: `E.M.M.A., graphisme. 150 mots.`,
    greeting: "E.M.M.A., design?",
    examples: ["Logo?"],
    limits: ["Portfolio"]
  },
  photographe: {
    profile: { name: "Photographie", icon: "üì∑", sector: "Cr√©ativit√©", specialties: ["Photo"] },
    systemPrompt: `E.M.M.A., photo. 150 mots.`,
    greeting: "E.M.M.A., photographie?",
    examples: ["Technique?"],
    limits: ["Pratiquer"]
  },
  videaste: {
    profile: { name: "Vid√©o", icon: "üé•", sector: "Cr√©ativit√©", specialties: ["Vid√©o"] },
    systemPrompt: `E.M.M.A., vid√©o. 150 mots.`,
    greeting: "E.M.M.A., vid√©o?",
    examples: ["Montage?"],
    limits: ["Cr√©er"]
  },
  redacteur: {
    profile: { name: "R√©daction", icon: "‚úçÔ∏è", sector: "Cr√©ativit√©", specialties: ["√âcriture"] },
    systemPrompt: `E.M.M.A., r√©dac. 150 mots.`,
    greeting: "E.M.M.A., √©criture?",
    examples: ["Article?"],
    limits: ["√âcrire"]
  },
  musicien: {
    profile: { name: "Musique", icon: "üéµ", sector: "Cr√©ativit√©", specialties: ["Musique"] },
    systemPrompt: `E.M.M.A., musique. 150 mots.`,
    greeting: "E.M.M.A., musique?",
    examples: ["Instrument?"],
    limits: ["Pratiquer"]
  },
  artiste: {
    profile: { name: "Arts Visuels", icon: "üñºÔ∏è", sector: "Cr√©ativit√©", specialties: ["Art"] },
    systemPrompt: `E.M.M.A., art. 150 mots.`,
    greeting: "E.M.M.A., art?",
    examples: ["Technique?"],
    limits: ["Cr√©er"]
  },
  comedien: {
    profile: { name: "Com√©die/Th√©√¢tre", icon: "üé≠", sector: "Cr√©ativit√©", specialties: ["Jeu"] },
    systemPrompt: `E.M.M.A., th√©√¢tre. 150 mots.`,
    greeting: "E.M.M.A., jeu?",
    examples: ["R√¥le?"],
    limits: ["Audition"]
  },
  realisateur: {
    profile: { name: "R√©alisation", icon: "üé¨", sector: "Cr√©ativit√©", specialties: ["R√©al"] },
    systemPrompt: `E.M.M.A., r√©al. 150 mots.`,
    greeting: "E.M.M.A., r√©alisation?",
    examples: ["Sc√®ne?"],
    limits: ["Tourner"]
  },
  illustrateur: {
    profile: { name: "Illustration", icon: "üñåÔ∏è", sector: "Cr√©ativit√©", specialties: ["Dessin"] },
    systemPrompt: `E.M.M.A., illustration. 150 mots.`,
    greeting: "E.M.M.A., illustration?",
    examples: ["Style?"],
    limits: ["Dessiner"]
  },
  animateur: {
    profile: { name: "Animation", icon: "üéûÔ∏è", sector: "Cr√©ativit√©", specialties: ["Animation"] },
    systemPrompt: `E.M.M.A., anim. 150 mots.`,
    greeting: "E.M.M.A., animation?",
    examples: ["2D/3D?"],
    limits: ["Animer"]
  },

  // SERVICES (5 m√©tiers)
  coiffeur: {
    profile: { name: "Coiffure", icon: "üíá", sector: "Services", specialties: ["Coiffure"] },
    systemPrompt: `E.M.M.A., coiffure. 150 mots.`,
    greeting: "E.M.M.A., coiffure?",
    examples: ["Coupe?"],
    limits: ["Consulter coiffeur"]
  },
  estheticienne: {
    profile: { name: "Esth√©tique", icon: "üíÖ", sector: "Services", specialties: ["Beaut√©"] },
    systemPrompt: `E.M.M.A., esth√©tique. 150 mots.`,
    greeting: "E.M.M.A., beaut√©?",
    examples: ["Soin?"],
    limits: ["Consulter esth√©ticienne"]
  },
  massotherapeute: {
    profile: { name: "Massoth√©rapie", icon: "üíÜ", sector: "Services", specialties: ["Massage"] },
    systemPrompt: `E.M.M.A., massage. 150 mots.`,
    greeting: "E.M.M.A., massage?",
    examples: ["Technique?"],
    limits: ["Consulter massoth√©rapeute"]
  },
  traiteur: {
    profile: { name: "Traiteur", icon: "üçΩÔ∏è", sector: "Services", specialties: ["Cuisine"] },
    systemPrompt: `E.M.M.A., traiteur. 150 mots.`,
    greeting: "E.M.M.A., √©v√©nement?",
    examples: ["Menu?"],
    limits: ["Consulter traiteur"]
  },
  organisateur_evenements: {
    profile: { name: "√âv√©nementiel", icon: "üéâ", sector: "Services", specialties: ["√âv√©nement"] },
    systemPrompt: `E.M.M.A., event. 150 mots.`,
    greeting: "E.M.M.A., √©v√©nement?",
    examples: ["Organisation?"],
    limits: ["Consulter organisateur"]
  }
};

// Grouper par secteur
const getSectors = () => {
  const sectorsMap = {};
  Object.entries(professionalProfiles).forEach(([id, profile]) => {
    const sector = profile.profile.sector;
    if (!sectorsMap[sector]) {
      sectorsMap[sector] = [];
    }
    sectorsMap[sector].push({ id, ...profile.profile });
  });
  
  // Trier alphab√©tiquement
  return Object.keys(sectorsMap).sort().reduce((acc, key) => {
    acc[key] = sectorsMap[key].sort((a, b) => a.name.localeCompare(b.name));
    return acc;
  }, {});
};

// ========================================
// COMPOSANT PRINCIPAL
// ========================================
const EmmaExpertChatbot = () => {
  const [selectedSector, setSelectedSector] = useState(null);
  const [selectedProfession, setSelectedProfession] = useState(null);
  const [messages, setMessages] = useState([]);
  const [inputMessage, setInputMessage] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [apiKey, setApiKey] = useState(import.meta.env.VITE_GEMINI_API_KEY || '');
  const [searchTerm, setSearchTerm] = useState('');
  const [showSettings, setShowSettings] = useState(false);
  const [userPersonality, setUserPersonality] = useState('standard');
  const [expertiseLevel, setExpertiseLevel] = useState('intermediaire');
  const [emmaPersonality, setEmmaPersonality] = useState('professionnelle');
  const [showAbout, setShowAbout] = useState(false);
  const [showDisclaimer, setShowDisclaimer] = useState(false);
  const [elapsedTime, setElapsedTime] = useState(0);
  const [sessionStartTime, setSessionStartTime] = useState(null);
  const messagesEndRef = useRef(null);

  const sectors = getSectors();

  // API key est maintenant g√©r√©e via les variables d'environnement Vercel

  useEffect(() => {
    if (sessionStartTime) {
      const timer = setInterval(() => {
        setElapsedTime(Math.floor((Date.now() - sessionStartTime) / 1000));
      }, 1000);
      return () => clearInterval(timer);
    }
  }, [sessionStartTime]);

  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  }, [messages]);

  // Fonction saveApiKey supprim√©e - API key g√©r√©e via Vercel

  const formatTime = (seconds) => {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins}:${secs.toString().padStart(2, '0')}`;
  };

  const formatMessageText = (text) => {
    // Am√©liorer le formatage du texte
    return text
      .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>') // Gras
      .replace(/\*(.*?)\*/g, '<em>$1</em>') // Italique
      .replace(/\n\n/g, '<br><br>') // Paragraphes
      .replace(/\n/g, '<br>') // Retours √† la ligne
      .replace(/^(\d+\.\s)/gm, '<br>$1') // Listes num√©rot√©es
      .replace(/^[-‚Ä¢]\s/gm, '<br>‚Ä¢ ') // Listes √† puces
      .replace(/^(\d+\.\s.*)$/gm, '<div class="list-item">$1</div>') // Items de liste
      .replace(/^‚Ä¢\s(.*)$/gm, '<div class="list-item">‚Ä¢ $1</div>'); // Items √† puces
  };

  const getPersonalityPrompt = () => {
    let prompt = '';
    
    // Personnalit√© utilisateur
    const userStyles = {
      analytique: "L'utilisateur pr√©f√®re des r√©ponses structur√©es, avec donn√©es et faits pr√©cis.",
      cr√©atif: "L'utilisateur aime les explications imag√©es, cr√©atives et les analogies.",
      pragmatique: "L'utilisateur veut du concret, des solutions directes et actionnables.",
      empathique: "L'utilisateur appr√©cie un ton chaleureux, compr√©hensif et rassurant.",
      standard: ""
    };
    prompt += userStyles[userPersonality] || '';
    
    // Niveau expertise
    const expertiseLevels = {
      d√©butant: "Explique comme √† quelqu'un qui d√©couvre le sujet. Vulgarise au maximum.",
      intermediaire: "√âquilibre entre vulgarisation et pr√©cision technique.",
      avanc√©: "Utilise termes techniques, suppose connaissances de base.",
      expert: "Niveau expert, d√©tails pouss√©s, r√©f√©rences sp√©cialis√©es."
    };
    prompt += ' ' + (expertiseLevels[expertiseLevel] || '');
    
    // Personnalit√© Emma
    const emmaStyles = {
      professionnelle: "Ton professionnel, formel mais accessible.",
      amicale: "Ton chaleureux, amical, tutoiement naturel.",
      p√©dagogue: "Ton enseignant, explicatif, patient.",
      directe: "Ton direct, concis, va droit au but."
    };
    prompt += ' ' + (emmaStyles[emmaPersonality] || '');
    
    return prompt.trim();
  };

  const selectProfession = (profession) => {
    setSelectedProfession(profession);
    const count = incrementConsultationCount(profession.id);
    
    const personalityPrompt = getPersonalityPrompt();
    const intro = `Bonjour ! Je suis E.M.M.A. (Exploration Multi-M√©tiers et Assistance), votre assistante virtuelle sp√©cialis√©e en ${profession.name}. 

Avant de commencer, j'aimerais mieux vous conna√Ætre :
- Quel est votre pr√©nom ?
- Que puis-je faire pour vous aider aujourd'hui ?

${personalityPrompt ? `Note : Je vais adapter mes r√©ponses selon vos pr√©f√©rences (${userPersonality}, niveau ${expertiseLevel}, style ${emmaPersonality}).` : ''}

N'oubliez pas : je suis une assistante virtuelle. Pour des conseils personnalis√©s et professionnels, consultez toujours un expert qualifi√© du domaine.

Alors, comment puis-je vous aider ?`;
    
    setMessages([{
      role: 'model',
      parts: [{ text: intro }]
    }]);
    setSessionStartTime(Date.now());
    setElapsedTime(0);
  };

  const sendMessage = async () => {
    if (!inputMessage.trim() || isLoading) return;

    // V√©rifier la cl√© API
    if (!apiKey) {
      setMessages(prev => [...prev, {
        role: 'model',
        parts: [{ text: "Erreur: Cl√© API Gemini manquante. Veuillez v√©rifier la configuration." }]
      }]);
      return;
    }

    const userMessage = {
      role: 'user',
      parts: [{ text: inputMessage }]
    };

    setMessages(prev => [...prev, userMessage]);
    setInputMessage('');
    setIsLoading(true);

    try {
      const profile = professionalProfiles[selectedProfession.id];
      const personalityPrompt = getPersonalityPrompt();
      
      const enhancedPrompt = `${profile.systemPrompt}

PERSONNALISATION:
${personalityPrompt}

RAPPEL: R√©ponds en MAX 150 mots. Structure: Intro/Infos/Consulter professionnel r√©el.`;

      const history = messages.map(msg => ({
        role: msg.role === 'assistant' ? 'model' : msg.role,
        parts: msg.parts
      }));

      const response = await fetch(
        'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent',
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "x-goog-api-key": apiKey
          },
          body: JSON.stringify({
            contents: [...history, userMessage],
            systemInstruction: { parts: [{ text: enhancedPrompt }] },
            generationConfig: { 
              temperature: 0.7, 
              maxOutputTokens: 500,
              topP: 0.8,
              topK: 40
            }
          })
        }
      );

      const data = await response.json();
      console.log('Gemini Response:', data); // Debug log
      
      if (!response.ok) {
        throw new Error(`API Error: ${response.status} - ${data.error?.message || 'Unknown error'}`);
      }
      
      if (data.candidates?.[0]?.content) {
        const responseText = data.candidates[0].content.parts[0].text;
        console.log('Response text:', responseText); // Debug log
        
        setMessages(prev => [...prev, {
          role: 'model',
          parts: [{ text: responseText }]
        }]);
      } else {
        console.error('No candidates in response:', data);
        setMessages(prev => [...prev, {
          role: 'model',
          parts: [{ text: "D√©sol√©e, je n'ai pas pu g√©n√©rer de r√©ponse. Veuillez r√©essayer." }]
        }]);
      }
    } catch (error) {
      console.error('Error:', error);
      setMessages(prev => [...prev, {
        role: 'model',
        parts: [{ text: `D√©sol√©e, une erreur s'est produite: ${error.message}. Veuillez v√©rifier votre connexion et r√©essayer.` }]
      }]);
    } finally {
      setIsLoading(false);
    }
  };

  const filteredSectors = Object.keys(sectors).filter(sector => 
    sector.toLowerCase().includes(searchTerm.toLowerCase()) ||
    sectors[sector].some(prof => 
      prof.name.toLowerCase().includes(searchTerm.toLowerCase())
    )
  ).sort();

  // √âcran API supprim√© - API key g√©r√©e via Vercel

  // S√©lection secteur/m√©tier
  if (!selectedProfession) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50 fade-in">
        {/* Header */}
        <div className="bg-white shadow-lg border-b-2 border-indigo-200 fade-in-soft">
          <div className="max-w-7xl mx-auto px-6 py-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-4">
                <div className="w-12 h-12 rounded-full overflow-hidden emma-avatar">
                  <img src="/emma-avatar.png" alt="Emma" className="w-full h-full object-cover" />
                </div>
                <div className="welcome-animation">
                  <h1 className="text-2xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent">
                    E.M.M.A.
                  </h1>
                  <p className="text-sm text-gray-600">100 Experts Professionnels</p>
                </div>
              </div>
              
              <div className="flex items-center gap-3">
                <button
                  onClick={() => setShowAbout(true)}
                  className="text-indigo-600 hover:underline text-sm"
                >
                  √Ä propos
                </button>
                <button
                  onClick={() => setShowDisclaimer(true)}
                  className="text-gray-600 hover:underline text-sm"
                >
                  Avis l√©gal
                </button>
              </div>
            </div>

            {/* Recherche */}
            <div className="mt-4 relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" size={20} />
              <input
                type="text"
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                placeholder="Rechercher un secteur ou un m√©tier..."
                className="w-full pl-10 pr-10 py-3 border-2 border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500"
              />
              {searchTerm && (
                <button
                  onClick={() => setSearchTerm('')}
                  className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
                >
                  <X size={20} />
                </button>
              )}
            </div>
          </div>
        </div>

        {/* Secteurs */}
        <div className="max-w-7xl mx-auto px-6 py-8 fade-in-soft">
          {filteredSectors.map(sectorName => {
            const professions = sectors[sectorName].filter(prof =>
              searchTerm === '' ||
              prof.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
              sectorName.toLowerCase().includes(searchTerm.toLowerCase())
            );

            if (professions.length === 0) return null;

            return (
              <div key={sectorName} className="mb-8">
                <h2 className="text-2xl font-bold text-gray-800 mb-4">{sectorName}</h2>
                <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4">
                  {professions.map((profession) => {
                    const count = getConsultationCount(profession.id);
                    return (
                      <div
                        key={profession.id}
                        onClick={() => selectProfession(profession)}
                        className="profession-card bg-white rounded-xl shadow-md hover:shadow-xl transition-all cursor-pointer p-4 hover:scale-105 border-2 border-transparent hover:border-indigo-400"
                      >
                        <div className="text-4xl mb-2 text-center">{profession.icon}</div>
                        <h3 className="text-sm font-bold text-gray-800 text-center mb-1">
                          {profession.name}
                        </h3>
                        {count > 0 && (
                          <p className="text-xs text-gray-500 text-center">
                            {count} consultation{count > 1 ? 's' : ''}
                          </p>
                        )}
                      </div>
                    );
                  })}
                </div>
              </div>
            );
          })}
        </div>

        {/* Modal √Ä propos */}
        {showAbout && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4" onClick={() => setShowAbout(false)}>
            <div className="bg-white rounded-2xl shadow-2xl p-8 max-w-2xl w-full max-h-[80vh] overflow-y-auto" onClick={(e) => e.stopPropagation()}>
              <div className="flex items-center justify-between mb-4">
                <h2 className="text-2xl font-bold text-gray-800">√Ä propos de E.M.M.A.</h2>
                <button onClick={() => setShowAbout(false)} className="text-gray-500 hover:text-gray-700">
                  <X size={24} />
                </button>
              </div>
              
              <div className="space-y-4 text-gray-700">
                <div className="flex items-center gap-4 mb-6">
                  <div className="w-20 h-20 rounded-full overflow-hidden flex-shrink-0">
                    <img src="/emma-avatar.png" alt="Emma" className="w-full h-full object-cover" />
                  </div>
                  <div>
                    <h3 className="text-xl font-bold">E.M.M.A.</h3>
                    <p className="text-sm text-gray-600">Exploration Multi-M√©tiers et Assistance</p>
                  </div>
                </div>

                <p className="font-semibold text-lg">Mission universelle</p>
                <p>Explorer, comprendre et relier les savoirs de tous les m√©tiers du monde. E.M.M.A. agit comme une intelligence de soutien professionnel global.</p>

                <p className="italic text-indigo-600">"De la science au geste, de la th√©orie √† la pratique ‚Äî je relie les mondes du savoir."</p>

                <div className="bg-indigo-50 p-4 rounded-lg">
                  <p className="font-semibold mb-2">Valeurs cardinales :</p>
                  <ul className="list-disc list-inside space-y-1 text-sm">
                    <li>Curiosit√© - Explorer sans a priori</li>
                    <li>Clart√© - Communication accessible</li>
                    <li>Collaboration - S'adapter √† chaque interlocuteur</li>
                    <li>Comp√©tence - Rigueur professionnelle</li>
                    <li>Coh√©rence - Fiabilit√© des informations</li>
                  </ul>
                </div>

                <p className="font-semibold">100 Profils Professionnels</p>
                <p>Couvrant 8 secteurs d'activit√© : Sant√©, Juridique, Finance, Technologie, Construction, √âducation, Affaires, Immobilier, Cr√©ativit√©, et Services.</p>

                <p className="text-sm text-gray-600 mt-4">Propuls√© par JSL AI - Intelligence Artificielle au service des professionnels qu√©b√©cois.</p>
              </div>
            </div>
          </div>
        )}

        {/* Modal Disclaimer */}
        {showDisclaimer && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4" onClick={() => setShowDisclaimer(false)}>
            <div className="bg-white rounded-2xl shadow-2xl p-8 max-w-2xl w-full max-h-[80vh] overflow-y-auto" onClick={(e) => e.stopPropagation()}>
              <div className="flex items-center justify-between mb-4">
                <h2 className="text-2xl font-bold text-gray-800">Avis l√©gal et Disclaimer</h2>
                <button onClick={() => setShowDisclaimer(false)} className="text-gray-500 hover:text-gray-700">
                  <X size={24} />
                </button>
              </div>
              
              <div className="space-y-4 text-gray-700 text-sm">
                <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4">
                  <p className="font-bold text-yellow-800">‚ö†Ô∏è AVERTISSEMENT IMPORTANT</p>
                  <p className="text-yellow-700 mt-2">E.M.M.A. est une assistante virtuelle utilisant l'intelligence artificielle. Elle ne remplace en AUCUN cas une consultation avec un professionnel qualifi√©.</p>
                </div>

                <div>
                  <p className="font-semibold mb-2">1. Nature du service</p>
                  <p>E.M.M.A. fournit des informations g√©n√©rales √† caract√®re √©ducatif et informatif uniquement. Les r√©ponses ne constituent pas des conseils professionnels personnalis√©s.</p>
                </div>

                <div>
                  <p className="font-semibold mb-2">2. Limitation de responsabilit√©</p>
                  <ul className="list-disc list-inside space-y-1 ml-4">
                    <li>Aucune garantie d'exactitude, d'exhaustivit√© ou d'actualit√© des informations</li>
                    <li>Les informations ne remplacent pas l'avis d'un professionnel qualifi√©</li>
                    <li>JSL AI d√©cline toute responsabilit√© pour les d√©cisions prises sur la base des informations fournies</li>
                    <li>En cas de doute, consultez toujours un professionnel certifi√©</li>
                  </ul>
                </div>

                <div>
                  <p className="font-semibold mb-2">3. Domaines sp√©cifiques</p>
                  <p className="font-semibold text-red-600">Sant√© :</p>
                  <p className="ml-4 mb-2">E.M.M.A. ne pose pas de diagnostic m√©dical et ne prescrit pas de traitement. En cas d'urgence m√©dicale, composez le 911 ou contactez Info-Sant√© 811.</p>
                  
                  <p className="font-semibold text-red-600">Juridique :</p>
                  <p className="ml-4 mb-2">E.M.M.A. ne fournit pas de conseils juridiques personnalis√©s. Pour toute question l√©gale, consultez un avocat membre du Barreau du Qu√©bec.</p>
                  
                  <p className="font-semibold text-red-600">Finance :</p>
                  <p className="ml-4">E.M.M.A. ne donne pas de conseils en placement. Consultez un planificateur financier ou conseiller agr√©√© pour des recommandations personnalis√©es.</p>
                </div>

                <div>
                  <p className="font-semibold mb-2">4. Protection des donn√©es</p>
                  <p>Les conversations ne sont pas sauvegard√©es de mani√®re permanente. Seuls des compteurs anonymes de consultations sont conserv√©s localement sur votre appareil.</p>
                </div>

                <div>
                  <p className="font-semibold mb-2">5. Utilisation √† vos risques</p>
                  <p>En utilisant E.M.M.A., vous reconnaissez et acceptez que :</p>
                  <ul className="list-disc list-inside space-y-1 ml-4">
                    <li>Vous utilisez ce service √† vos propres risques</li>
                    <li>Vous ne vous fiez pas uniquement aux informations fournies</li>
                    <li>Vous consulterez un professionnel qualifi√© pour toute d√©cision importante</li>
                  </ul>
                </div>

                <div className="bg-indigo-50 p-4 rounded-lg mt-4">
                  <p className="font-semibold text-indigo-800">Recommandation</p>
                  <p className="text-indigo-700">Utilisez E.M.M.A. comme point de d√©part pour vos recherches, puis consultez toujours un expert qualifi√© du domaine concern√© pour des conseils personnalis√©s et professionnels.</p>
                </div>

                <p className="text-xs text-gray-500 mt-4">Derni√®re mise √† jour : Octobre 2025</p>
              </div>
            </div>
          </div>
        )}
      </div>
    );
  }

  // Interface de chat
  const profile = professionalProfiles[selectedProfession.id];
  const consultationCount = getConsultationCount(selectedProfession.id);

  return (
    <div className="flex h-screen bg-gradient-to-br from-indigo-50 via-purple-50 to-pink-50 fade-in">
      {/* Sidebar */}
      <div className="w-80 bg-white shadow-xl border-r-2 border-indigo-200 overflow-y-auto">
        <div className="bg-gradient-to-r from-indigo-600 to-purple-600 text-white p-4">
          <div className="flex items-center gap-3">
            <div className="w-12 h-12 rounded-full overflow-hidden">
              <img src="/emma-avatar.png" alt="Emma" className="w-full h-full object-cover" />
            </div>
            <div>
              <h1 className="text-xl font-bold">E.M.M.A.</h1>
              <p className="text-xs opacity-90">Assistante Virtuelle</p>
            </div>
          </div>
        </div>

        <div className="p-6 border-b border-gray-200">
          <div className="flex items-center gap-3 mb-4">
            <div className="text-4xl">{selectedProfession.icon}</div>
            <div>
              <h3 className="font-bold text-gray-800">{profile.profile.name}</h3>
              <p className="text-xs text-gray-600">Secteur : {profile.profile.sector}</p>
              {consultationCount > 0 && (
                <p className="text-xs text-indigo-600">{consultationCount} consultation{consultationCount > 1 ? 's' : ''}</p>
              )}
            </div>
          </div>
          
          <div className="flex items-center justify-between bg-indigo-50 p-3 rounded-lg">
            <span className="text-sm font-semibold text-gray-700 flex items-center gap-2">
              <Clock size={16} /> Dur√©e
            </span>
            <span className="text-lg font-bold text-indigo-600">{formatTime(elapsedTime)}</span>
          </div>
        </div>

        {/* Param√®tres personnalisation */}
        <div className="p-6 border-b border-gray-200">
          <button
            onClick={() => setShowSettings(!showSettings)}
            className="flex items-center gap-2 text-sm font-semibold text-gray-700 hover:text-indigo-600 mb-3"
          >
            <Settings size={16} /> Personnaliser les r√©ponses
          </button>
          
          {showSettings && (
            <div className="space-y-4 text-sm">
              <div>
                <label className="block text-xs font-semibold text-gray-700 mb-1">Votre style :</label>
                <select
                  value={userPersonality}
                  onChange={(e) => setUserPersonality(e.target.value)}
                  className="w-full border border-gray-300 rounded px-2 py-1 text-xs"
                >
                  <option value="standard">Standard</option>
                  <option value="analytique">Analytique</option>
                  <option value="cr√©atif">Cr√©atif</option>
                  <option value="pragmatique">Pragmatique</option>
                  <option value="empathique">Empathique</option>
                </select>
              </div>

              <div>
                <label className="block text-xs font-semibold text-gray-700 mb-1">Niveau d'expertise :</label>
                <select
                  value={expertiseLevel}
                  onChange={(e) => setExpertiseLevel(e.target.value)}
                  className="w-full border border-gray-300 rounded px-2 py-1 text-xs"
                >
                  <option value="d√©butant">D√©butant</option>
                  <option value="intermediaire">Interm√©diaire</option>
                  <option value="avanc√©">Avanc√©</option>
                  <option value="expert">Expert</option>
                </select>
              </div>

              <div>
                <label className="block text-xs font-semibold text-gray-700 mb-1">Style E.M.M.A. :</label>
                <select
                  value={emmaPersonality}
                  onChange={(e) => setEmmaPersonality(e.target.value)}
                  className="w-full border border-gray-300 rounded px-2 py-1 text-xs"
                >
                  <option value="professionnelle">Professionnelle</option>
                  <option value="amicale">Amicale</option>
                  <option value="p√©dagogue">P√©dagogue</option>
                  <option value="directe">Directe</option>
                </select>
              </div>

              <div className="bg-blue-50 p-2 rounded text-xs text-blue-800">
                <p className="font-semibold">Param√®tres actifs :</p>
                <p>‚Ä¢ Style : {userPersonality}</p>
                <p>‚Ä¢ Niveau : {expertiseLevel}</p>
                <p>‚Ä¢ Ton : {emmaPersonality}</p>
              </div>
            </div>
          )}
        </div>

        <div className="p-6">
          <p className="text-xs text-gray-600 italic">
            üí° E.M.M.A. est une assistante virtuelle. Pour des conseils personnalis√©s, consultez un professionnel qualifi√©.
          </p>
        </div>
      </div>

      {/* Zone de chat */}
      <div className="flex-1 flex flex-col">
        <div className="bg-white shadow-md border-b-2 border-indigo-200 p-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <button
                onClick={() => {
                  setSelectedProfession(null);
                  setMessages([]);
                  setSessionStartTime(null);
                }}
                className="text-gray-600 hover:text-gray-800"
              >
                <ArrowLeft size={24} />
              </button>
              <div className="flex items-center gap-3">
                <div className="w-10 h-10 rounded-full overflow-hidden">
                  <img src="/emma-avatar.png" alt="Emma" className="w-full h-full object-cover" />
                </div>
                <div>
                  <h2 className="text-lg font-bold text-gray-800">
                    Consultation avec E.M.M.A.
                  </h2>
                  <p className="text-sm text-gray-600">{profile.profile.name}</p>
                </div>
              </div>
            </div>
            
            <button
              onClick={() => {
                setSelectedProfession(null);
                setSelectedSector(null);
                setMessages([]);
              }}
              className="flex items-center gap-2 bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors"
            >
              <RefreshCw size={18} />
              Nouveau
            </button>
          </div>
        </div>

        <div className="flex-1 overflow-y-auto p-6">
          <div className="max-w-4xl mx-auto space-y-4">
            {messages.map((message, index) => (
              <div
                key={index}
                className={`chat-message flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}
              >
                {message.role === 'model' && (
                  <div className="w-10 h-10 rounded-full overflow-hidden mr-3 flex-shrink-0 shadow-md">
                    <img src="/emma-avatar.png" alt="Emma" className="w-full h-full object-cover" />
                  </div>
                )}
                <div
                  className={`${
                    message.role === 'user'
                      ? 'message-user'
                      : 'message-emma'
                  }`}
                >
                  <div 
                    className="message-content"
                    dangerouslySetInnerHTML={{ 
                      __html: message.role === 'model' 
                        ? formatMessageText(message.parts[0].text) 
                        : message.parts[0].text 
                    }}
                  />
                </div>
                {message.role === 'user' && (
                  <div className="w-8 h-8 rounded-full bg-gradient-to-r from-indigo-600 to-purple-600 flex items-center justify-center text-white text-sm font-semibold ml-3 flex-shrink-0 shadow-md">
                    üë§
                  </div>
                )}
              </div>
            ))}
            {isLoading && (
              <div className="chat-message flex justify-start">
                <div className="w-10 h-10 rounded-full overflow-hidden mr-3 flex-shrink-0 shadow-md">
                  <img src="/emma-avatar.png" alt="Emma" className="w-full h-full object-cover" />
                </div>
                <div className="typing-indicator">
                  <div className="typing-dot"></div>
                  <div className="typing-dot"></div>
                  <div className="typing-dot"></div>
                </div>
              </div>
            )}
            <div ref={messagesEndRef} />
          </div>
        </div>

        <div className="bg-white border-t-2 border-indigo-200 p-4 shadow-lg">
          <div className="max-w-4xl mx-auto flex gap-3">
            <textarea
              value={inputMessage}
              onChange={(e) => setInputMessage(e.target.value)}
              onKeyPress={(e) => {
                if (e.key === 'Enter' && !e.shiftKey) {
                  e.preventDefault();
                  sendMessage();
                }
              }}
              placeholder="Posez votre question √† E.M.M.A..."
              className="flex-1 border-2 border-gray-300 rounded-xl px-4 py-3 focus:outline-none focus:border-indigo-500 resize-none"
              rows="2"
              disabled={isLoading}
            />
            <button
              onClick={sendMessage}
              disabled={!inputMessage.trim() || isLoading}
              className="bg-gradient-to-r from-indigo-600 to-purple-600 text-white px-6 py-3 rounded-xl hover:from-indigo-700 hover:to-purple-700 transition-all disabled:opacity-50 flex items-center gap-2"
            >
              <Send size={20} />
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default EmmaExpertChatbot;