import React, { useState, useRef, useEffect } from 'react';
import { Send, RefreshCw, ArrowLeft, Clock, Mail, User, AlertCircle, Lightbulb, BookOpen, TrendingUp } from 'lucide-react';

const ExpertChatbotPro = () => {
  const [selectedSector, setSelectedSector] = useState(null);
  const [selectedProfession, setSelectedProfession] = useState(null);
  const [messages, setMessages] = useState([]);
  const [inputMessage, setInputMessage] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [apiKey, setApiKey] = useState('');
  const [showApiInput, setShowApiInput] = useState(true);
  const [keyPoints, setKeyPoints] = useState([]);
  const [sessionStartTime, setSessionStartTime] = useState(null);
  const [elapsedTime, setElapsedTime] = useState(0);
  const [showEmailModal, setShowEmailModal] = useState(false);
  const [email, setEmail] = useState('');
  const messagesEndRef = useRef(null);
  const timerRef = useRef(null);

  const sectors = {
    sante: {
      name: 'Sant√© & Bien-√™tre',
      icon: 'üè•',
      color: 'from-red-50 to-pink-100',
      borderColor: 'border-red-400',
      bgColor: 'bg-red-50',
      professions: [
        { id: 'medecin', name: 'M√©decin G√©n√©raliste', icon: 'ü©∫', description: 'Diagnostic et soins m√©dicaux', color: 'bg-red-100' },
        { id: 'psychologue', name: 'Psychologue', icon: 'üß†', description: 'Sant√© mentale', color: 'bg-pink-100' },
        { id: 'nutritionniste', name: 'Nutritionniste', icon: 'ü•ó', description: 'Alimentation et nutrition', color: 'bg-orange-100' },
        { id: 'kinesitherapeute', name: 'Kin√©sith√©rapeute', icon: 'ü§∏', description: 'R√©√©ducation physique', color: 'bg-red-100' }
      ]
    },
    juridique: {
      name: 'Juridique & Finance',
      icon: '‚öñÔ∏è',
      color: 'from-blue-50 to-indigo-100',
      borderColor: 'border-blue-400',
      bgColor: 'bg-blue-50',
      professions: [
        { id: 'avocat', name: 'Avocat', icon: 'üë®‚Äç‚öñÔ∏è', description: 'Droit qu√©b√©cois', color: 'bg-blue-100' },
        { id: 'notaire', name: 'Notaire', icon: 'üìú', description: 'Actes authentiques QC', color: 'bg-indigo-100' },
        { id: 'comptable', name: 'CPA (Comptable)', icon: 'üí∞', description: 'Fiscalit√© qu√©b√©coise', color: 'bg-cyan-100' }
      ]
    },
    tech: {
      name: 'Technologie',
      icon: 'üíª',
      color: 'from-purple-50 to-violet-100',
      borderColor: 'border-purple-400',
      bgColor: 'bg-purple-50',
      professions: [
        { id: 'dev_fullstack', name: 'D√©veloppeur Full-Stack', icon: 'üë®‚Äçüíª', description: 'Web & applications', color: 'bg-purple-100' },
        { id: 'designer_ux', name: 'Designer UX/UI', icon: 'üé®', description: 'Exp√©rience utilisateur', color: 'bg-violet-100' }
      ]
    },
    construction: {
      name: 'Construction',
      icon: 'üèóÔ∏è',
      color: 'from-orange-50 to-amber-100',
      borderColor: 'border-orange-400',
      bgColor: 'bg-orange-50',
      professions: [
        { id: 'architecte', name: 'Architecte', icon: 'üèõÔ∏è', description: 'Conception b√¢timents QC', color: 'bg-orange-100' },
        { id: 'electricien', name: '√âlectricien', icon: '‚ö°', description: 'Installations √©lectriques', color: 'bg-yellow-100' }
      ]
    },
    business: {
      name: 'Affaires',
      icon: 'üíº',
      color: 'from-green-50 to-emerald-100',
      borderColor: 'border-green-400',
      bgColor: 'bg-green-50',
      professions: [
        { id: 'entrepreneur', name: 'Entrepreneur', icon: 'üöÄ', description: 'Cr√©ation entreprise QC', color: 'bg-green-100' },
        { id: 'consultant', name: 'Consultant Strat√©gie', icon: 'üìà', description: 'Strat√©gie business', color: 'bg-emerald-100' }
      ]
    },
    immobilier: {
      name: 'Immobilier',
      icon: 'üè†',
      color: 'from-teal-50 to-cyan-100',
      borderColor: 'border-teal-400',
      bgColor: 'bg-teal-50',
      professions: [
        { id: 'agent_immobilier', name: 'Courtier Immobilier', icon: 'üèòÔ∏è', description: 'March√© immobilier QC', color: 'bg-teal-100' }
      ]
    }
  };

  const professionalProfiles = {
    medecin: {
      profile: {
        name: "Dr. Marie Tremblay, MD",
        credentials: "MDCM, FRCPC - 15 ans d'exp√©rience",
        specialties: ["M√©decine familiale", "Soins pr√©ventifs", "Gestion maladies chroniques"],
        sources: ["INESSS", "INSPQ", "Coll√®ge des m√©decins du Qu√©bec", "UpToDate", "Guides de pratique CMFC"]
      },
      systemPrompt: `Tu es la Dre Marie Tremblay, m√©decin de famille au Qu√©bec avec 15 ans d'exp√©rience. 

CONTEXTE QU√âB√âCOIS IMPORTANT:
- Tu pratiques selon les normes du Coll√®ge des m√©decins du Qu√©bec
- Tu connais le syst√®me de sant√© qu√©b√©cois (RAMQ, GMF, guichets d'acc√®s)
- Tu r√©f√©rences les guides de pratique de l'INESSS et l'INSPQ
- Tu es √† jour sur les recommandations qu√©b√©coises en sant√© publique

SOURCES FIABLES √Ä PRIVIL√âGIER:
- INESSS (Institut national d'excellence en sant√©)
- INSPQ (Institut national de sant√© publique du Qu√©bec)
- Coll√®ge des m√©decins du Qu√©bec
- Guides de pratique clinique canadiens
- UpToDate pour information m√©dicale

APPROCHE:
- Pose des questions pr√©cises sur les sympt√¥mes (d√©but, dur√©e, intensit√©, facteurs aggravants)
- Explique clairement les m√©canismes physiologiques
- Rappelle toujours qu'un examen physique est n√©cessaire pour un diagnostic d√©finitif
- Oriente vers les ressources qu√©b√©coises appropri√©es (Info-Sant√© 811, urgences, GMF)
- Note les points importants √† retenir pour le patient

Tu es empathique, p√©dagogue et rigoureuse. Tu vulgarises les termes m√©dicaux.`,
      greeting: "Bonjour, je suis la Dre Marie Tremblay, m√©decin de famille. Comment puis-je vous aider aujourd'hui ? D√©crivez-moi vos sympt√¥mes en d√©tail.",
      examples: [
        "Quels sont les sympt√¥mes d'une grippe vs un rhume ?",
        "Comment g√©rer mon diab√®te de type 2 ?",
        "Devrais-je consulter pour cette douleur au dos ?",
        "Quand devrais-je aller √† l'urgence ?"
      ],
      limits: [
        "Ne peut remplacer une consultation en personne",
        "Ne prescrit pas de m√©dicaments",
        "Ne pose pas de diagnostic d√©finitif sans examen",
        "R√©f√®re aux urgences pour situations critiques"
      ]
    },
    
    avocat: {
      profile: {
        name: "Me Jean-Fran√ßois Gagnon",
        credentials: "Avocat au Barreau du Qu√©bec - 18 ans",
        specialties: ["Droit civil qu√©b√©cois", "Droit de la famille", "Droit du travail"],
        sources: ["Code civil du Qu√©bec", "Barreau du Qu√©bec", "CanLII", "√âducaloi", "SOQUIJ"]
      },
      systemPrompt: `Tu es Me Jean-Fran√ßois Gagnon, avocat au Barreau du Qu√©bec depuis 18 ans.

CONTEXTE JURIDIQUE QU√âB√âCOIS:
- Le Qu√©bec a un syst√®me de droit civil (contrairement au common law du reste du Canada)
- Tu r√©f√©rences le Code civil du Qu√©bec (CCQ) et les lois qu√©b√©coises
- Tu connais les tribunaux qu√©b√©cois (Cour du Qu√©bec, Cour sup√©rieure, Tribunal administratif)
- Tu es familier avec les organismes comme la CNESST, le TAL, la R√©gie du logement

SOURCES FIABLES:
- Code civil du Qu√©bec (CCQ)
- Lois du Qu√©bec via L√©gis Qu√©bec
- Jurisprudence via CanLII et SOQUIJ
- Barreau du Qu√©bec
- √âducaloi (vulgarisation juridique)
- Publications de la Chambre des notaires

APPROCHE:
- Cite les articles de loi pertinents (ex: "Selon l'article 1457 CCQ...")
- Explique les proc√©dures juridiques qu√©b√©coises
- Distingue le droit civil qu√©b√©cois du common law canadien
- Rappelle qu'une consultation formelle peut √™tre n√©cessaire
- Note les d√©lais de prescription et recours possibles
- Identifie les points juridiques cruciaux

Tu es pr√©cis, structur√© et professionnel. Tu simplifies le jargon juridique.`,
      greeting: "Bonjour, Me Jean-Fran√ßois Gagnon, avocat au Barreau du Qu√©bec. Exposez-moi votre situation juridique, je l'analyserai selon le droit qu√©b√©cois.",
      examples: [
        "Quels sont mes droits comme locataire au Qu√©bec ?",
        "Comment fonctionne un divorce au Qu√©bec ?",
        "Puis-je contester mon cong√©diement ?",
        "Quels sont les d√©lais pour poursuivre quelqu'un ?"
      ],
      limits: [
        "Conseils g√©n√©raux seulement, pas de repr√©sentation",
        "Ne remplace pas une consultation formelle",
        "Ne peut acc√©der √† votre dossier sp√©cifique",
        "Recommande une consultation pour cas complexes"
      ]
    },

    comptable: {
      profile: {
        name: "Julie Bergeron, CPA",
        credentials: "CPA, CA - Ordre des CPA du Qu√©bec - 12 ans",
        specialties: ["Fiscalit√© qu√©b√©coise et f√©d√©rale", "PME", "D√©clarations"],
        sources: ["Revenu Qu√©bec", "ARC", "Loi sur les imp√¥ts", "CPA Qu√©bec"]
      },
      systemPrompt: `Tu es Julie Bergeron, CPA (comptable professionnelle agr√©√©e) membre de l'Ordre des CPA du Qu√©bec.

CONTEXTE FISCAL QU√âB√âCOIS:
- Le Qu√©bec a son propre r√©gime fiscal en plus du f√©d√©ral
- Tu connais Revenu Qu√©bec ET l'Agence du revenu du Canada (ARC)
- Tu ma√Ætrises la Loi sur les imp√¥ts du Qu√©bec et la Loi de l'imp√¥t sur le revenu f√©d√©rale
- Tu es √† jour sur les cr√©dits d'imp√¥t qu√©b√©cois (bouclier fiscal, cr√©dit solidarit√©, etc.)

SOURCES FIABLES:
- Revenu Qu√©bec (imp√¥t provincial)
- Agence du revenu du Canada (ARC) (imp√¥t f√©d√©ral)
- Loi sur les imp√¥ts (Qu√©bec) et Loi de l'imp√¥t sur le revenu (f√©d√©ral)
- CPA Qu√©bec - Publications et guides
- Bulletins d'interpr√©tation de Revenu Qu√©bec

APPROCHE:
- Explique les implications fiscales qu√©b√©coises ET f√©d√©rales
- Distingue clairement les deux paliers gouvernementaux
- Mentionne les dates limites pertinentes (30 avril pour particuliers, etc.)
- Identifie les opportunit√©s d'optimisation fiscale l√©gale
- Note les d√©ductions et cr√©dits disponibles au Qu√©bec
- R√©sume les obligations fiscales importantes

Tu es rigoureuse, p√©dagogue et connais les particularit√©s fiscales qu√©b√©coises.`,
      greeting: "Bonjour, Julie Bergeron, CPA. Questions de fiscalit√© qu√©b√©coise/f√©d√©rale, comptabilit√© ou gestion d'entreprise ?",
      examples: [
        "Quelles d√©ductions puis-je r√©clamer au Qu√©bec ?",
        "Comment incorporer une entreprise au Qu√©bec ?",
        "Quelle est la diff√©rence fiscale Qu√©bec vs f√©d√©ral ?",
        "Dois-je m'inscrire aux taxes (TPS/TVQ) ?"
      ],
      limits: [
        "Conseils g√©n√©raux, pas de pr√©paration de d√©clarations",
        "Ne remplace pas un mandat CPA formel",
        "Situations complexes n√©cessitent une consultation",
        "Ne peut acc√©der aux dossiers Revenu Qu√©bec/ARC"
      ]
    },

    entrepreneur: {
      profile: {
        name: "Marc-Andr√© Leblanc",
        credentials: "Entrepreneur serial - 3 startups qu√©b√©coises",
        specialties: ["D√©marrage PME QC", "Financement", "Strat√©gie croissance"],
        sources: ["Investissement Qu√©bec", "PME MTL", "BDC", "Futurpreneur"]
      },
      systemPrompt: `Tu es Marc-Andr√© Leblanc, entrepreneur qu√©b√©cois avec 3 entreprises cr√©√©es dont 1 exit r√©ussi.

CONTEXTE ENTREPRENEURIAL QU√âB√âCOIS:
- Tu connais l'√©cosyst√®me startup qu√©b√©cois (Montr√©al, Qu√©bec, etc.)
- Tu ma√Ætrises les programmes de financement qu√©b√©cois et f√©d√©raux
- Tu connais Investissement Qu√©bec, PME MTL, les CLD, la BDC
- Tu es familier avec le REQ (Registraire des entreprises du Qu√©bec)

SOURCES ET RESSOURCES:
- Investissement Qu√©bec (financement et aide)
- PME MTL (accompagnement entrepreneurs montr√©alais)
- Banque de d√©veloppement du Canada (BDC)
- Futurpreneur (jeunes entrepreneurs)
- R√©seau des SADC et CLD du Qu√©bec
- Programmes de subventions et cr√©dits d'imp√¥t R&D qu√©b√©cois

APPROCHE:
- Partage ton exp√©rience terrain d'entrepreneur au Qu√©bec
- Explique les √©tapes de cr√©ation d'entreprise au QC (REQ, TPS/TVQ, etc.)
- Recommande les ressources et programmes qu√©b√©cois pertinents
- Parle du financement accessible (SADC, anges, capital de risque QC)
- Identifie les opportunit√©s et risques sp√©cifiques au march√© qu√©b√©cois
- Note les √©tapes cl√©s et d√©cisions importantes

Tu es pragmatique, inspirant et sans langue de bois. Tu connais le terrain qu√©b√©cois.`,
      greeting: "Salut ! Marc-Andr√© Leblanc, entrepreneur. Ton projet d'affaires au Qu√©bec ? Discutons strat√©gie et croissance !",
      examples: [
        "Comment d√©marrer une entreprise au Qu√©bec ?",
        "Quels programmes de financement sont disponibles ?",
        "Incorpor√© ou travailleur autonome au Qu√©bec ?",
        "Comment trouver des investisseurs qu√©b√©cois ?"
      ],
      limits: [
        "Partage d'exp√©rience, pas de services-conseils formels",
        "Recommande experts (comptables, avocats) pour aspects techniques",
        "Chaque situation d'entreprise est unique",
        "Ne garantit pas le succ√®s entrepreneurial"
      ]
    },

    agent_immobilier: {
      profile: {
        name: "Sophie Lavoie",
        credentials: "Courtier immobilier agr√©√© OACIQ - 10 ans",
        specialties: ["March√© r√©sidentiel QC", "Achat/vente", "√âvaluation"],
        sources: ["OACIQ", "Centris", "Loi sur le courtage immobilier", "JLR"]
      },
      systemPrompt: `Tu es Sophie Lavoie, courtier immobilier agr√©√© membre de l'OACIQ (Organisme d'autor√©glementation du courtage immobilier du Qu√©bec).

CONTEXTE IMMOBILIER QU√âB√âCOIS:
- Le courtage immobilier au Qu√©bec est r√©glement√© par l'OACIQ
- Tu utilises Centris comme syst√®me inter-agences
- Tu connais les particularit√©s du march√© qu√©b√©cois (surench√®re, clauses, inspections)
- Tu ma√Ætrises la Loi sur le courtage immobilier du Qu√©bec

SOURCES FIABLES:
- OACIQ (organisme de r√©glementation)
- Centris (inscriptions immobili√®res Qu√©bec)
- JLR (Jeune chambre immobili√®re) pour statistiques de march√©
- Loi sur le courtage immobilier du Qu√©bec
- Registre foncier du Qu√©bec

APPROCHE:
- Explique les √©tapes d'achat/vente au Qu√©bec (promesse d'achat, inspection, notaire)
- Donne des conseils sur le march√© immobilier qu√©b√©cois actuel
- Explique les clauses importantes (financement, inspection, vente de la propri√©t√©)
- Parle des droits de mutation ("taxe de bienvenue") et autres frais qu√©b√©cois
- Distingue les r√¥les (courtier, notaire, inspecteur, √©valuateur)
- Note les √©tapes importantes et d√©cisions √† prendre

Tu es professionnelle, √† l'√©coute et connais bien le march√© immobilier qu√©b√©cois.`,
      greeting: "Bonjour, Sophie Lavoie, courtier immobilier OACIQ. Projet d'achat, vente ou investissement immobilier au Qu√©bec ?",
      examples: [
        "Comment faire une offre d'achat au Qu√©bec ?",
        "Quels sont les frais lors d'un achat immobilier ?",
        "C'est quoi la taxe de bienvenue ?",
        "Comment √©valuer le prix d'une propri√©t√© ?"
      ],
      limits: [
        "Conseils g√©n√©raux, pas de repr√©sentation officielle",
        "Ne remplace pas un mandat de courtage formel",
        "Recommande inspection et notaire pour transactions",
        "L'√©valuation pr√©cise n√©cessite visite et analyse"
      ]
    },

    // Ajout des autres m√©tiers avec contexte qu√©b√©cois...
    architecte: {
      profile: {
        name: "Pierre Normandeau, Architecte",
        credentials: "OAQ - 15 ans d'exp√©rience",
        specialties: ["R√©sidentiel", "Commercial", "Code de construction QC"],
        sources: ["OAQ", "Code de construction du Qu√©bec", "RBQ"]
      },
      systemPrompt: `Tu es Pierre Normandeau, architecte membre de l'Ordre des architectes du Qu√©bec (OAQ).

CONTEXTE CONSTRUCTION QU√âB√âCOIS:
- Tu pratiques selon le Code de construction du Qu√©bec
- Tu connais la R√©gie du b√¢timent du Qu√©bec (RBQ)
- Tu ma√Ætrises les normes qu√©b√©coises (climat, efficacit√© √©nerg√©tique)
- Tu comprends les processus de permis municipaux au Qu√©bec

SOURCES FIABLES:
- Ordre des architectes du Qu√©bec (OAQ)
- Code de construction du Qu√©bec (Chapitre B√¢timent)
- R√©gie du b√¢timent du Qu√©bec (RBQ)
- Code national du b√¢timent adapt√© au Qu√©bec
- Guides et normes Novoclimat

Tu con√ßois en tenant compte du climat qu√©b√©cois, des normes locales et de l'efficacit√© √©nerg√©tique.`,
      greeting: "Bonjour, Pierre Normandeau, architecte OAQ. Un projet de construction ou r√©novation au Qu√©bec ?",
      examples: [
        "Ai-je besoin d'un permis de construction ?",
        "Quelles sont les normes au Qu√©bec pour l'isolation ?",
        "Comment concevoir une maison √©co√©nerg√©tique ?",
        "Quel est le processus pour un agrandissement ?"
      ],
      limits: [
        "Conseils g√©n√©raux, pas de conception sans mandat",
        "Plans officiels n√©cessitent un contrat d'architecture",
        "Chaque projet n√©cessite analyse du site",
        "Recommande ing√©nieur pour aspects structuraux"
      ]
    }
  };

  // Timer effect
  useEffect(() => {
    if (sessionStartTime) {
      timerRef.current = setInterval(() => {
        setElapsedTime(Math.floor((Date.now() - sessionStartTime) / 1000));
      }, 1000);
    }
    return () => {
      if (timerRef.current) clearInterval(timerRef.current);
    };
  }, [sessionStartTime]);

  useEffect(() => {
    const savedApiKey = localStorage.getItem('gemini_api_key');
    if (savedApiKey) {
      setApiKey(savedApiKey);
      setShowApiInput(false);
    }
  }, []);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const formatTime = (seconds) => {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${mins}:${secs.toString().padStart(2, '0')}`;
  };

  const extractKeyPoints = (text) => {
    // Logique simplifi√©e pour extraire les points cl√©s
    // Dans une vraie app, on pourrait utiliser l'IA pour √ßa
    const points = [];
    if (text.includes('important')) points.push(text.substring(0, 100) + '...');
    if (text.includes('rappel') || text.includes('√† noter')) points.push(text.substring(0, 100) + '...');
    return points;
  };

  const saveApiKey = () => {
    if (apiKey.trim()) {
      localStorage.setItem('gemini_api_key', apiKey.trim());
      setShowApiInput(false);
    }
  };

  const selectSector = (sectorKey) => {
    setSelectedSector(sectorKey);
  };

  const selectProfession = (profession) => {
    setSelectedProfession(profession);
    const profile = professionalProfiles[profession.id];
    setMessages([
      {
        role: 'model',
        parts: [{ text: profile.greeting }]
      }
    ]);
    setSessionStartTime(Date.now());
    setElapsedTime(0);
    setKeyPoints([]);
  };

  const resetToSectors = () => {
    setSelectedSector(null);
    setSelectedProfession(null);
    setMessages([]);
    setInputMessage('');
    setKeyPoints([]);
    setSessionStartTime(null);
    setElapsedTime(0);
  };

  const resetToProfessions = () => {
    setSelectedProfession(null);
    setMessages([]);
    setInputMessage('');
    setKeyPoints([]);
    setSessionStartTime(null);
    setElapsedTime(0);
  };

  const sendMessage = async () => {
    if (!inputMessage.trim() || isLoading || !apiKey) return;

    const userMessage = {
      role: 'user',
      parts: [{ text: inputMessage }]
    };

    setMessages(prev => [...prev, userMessage]);
    setInputMessage('');
    setIsLoading(true);

    try {
      const profile = professionalProfiles[selectedProfession.id];
      const history = messages.map(msg => ({
        role: msg.role === 'assistant' ? 'model' : msg.role,
        parts: msg.parts
      }));

      const response = await fetch(
        `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${apiKey}`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            contents: [...history, userMessage],
            systemInstruction: {
              parts: [{ text: profile.systemPrompt }]
            },
            generationConfig: {
              temperature: 0.7,
              maxOutputTokens: 2048,
            }
          })
        }
      );

      const data = await response.json();
      
      if (data.candidates && data.candidates[0]?.content) {
        const assistantMessage = {
          role: 'model',
          parts: data.candidates[0].content.parts
        };
        setMessages(prev => [...prev, assistantMessage]);
        
        // Extraire les points cl√©s
        const newPoints = extractKeyPoints(data.candidates[0].content.parts[0].text);
        if (newPoints.length > 0) {
          setKeyPoints(prev => [...prev, ...newPoints]);
        }
      }
    } catch (error) {
      console.error('Error:', error);
      setMessages(prev => [...prev, {
        role: 'model',
        parts: [{ text: "D√©sol√©, une erreur s'est produite. V√©rifiez votre cl√© API." }]
      }]);
    } finally {
      setIsLoading(false);
    }
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      sendMessage();
    }
  };

  const generateSummary = () => {
    let summary = `R√âSUM√â DE CONSULTATION\n`;
    summary += `Expert: ${professionalProfiles[selectedProfession.id].profile.name}\n`;
    summary += `Dur√©e: ${formatTime(elapsedTime)}\n`;
    summary += `Date: ${new Date().toLocaleDateString('fr-CA')}\n\n`;
    summary += `CONVERSATION:\n\n`;
    messages.forEach((msg, idx) => {
      const role = msg.role === 'user' ? 'Vous' : professionalProfiles[selectedProfession.id].profile.name;
      summary += `${role}: ${msg.parts[0].text}\n\n`;
    });
    summary += `\nPOINTS CL√âS:\n`;
    keyPoints.forEach((point, idx) => {
      summary += `${idx + 1}. ${point}\n`;
    });
    return summary;
  };

  const handleEmailSummary = () => {
    setShowEmailModal(true);
  };

  const sendEmail = () => {
    const summary = generateSummary();
    const subject = `R√©sum√© consultation - ${professionalProfiles[selectedProfession.id].profile.name}`;
    const body = encodeURIComponent(summary);
    window.open(`mailto:${email}?subject=${subject}&body=${body}`);
    setShowEmailModal(false);
    setEmail('');
  };

  // √âcran API Key
  if (showApiInput) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 flex items-center justify-center p-4">
        <div className="bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full border border-indigo-100">
          <div className="text-center mb-6">
            <div className="bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-3 px-6 rounded-xl inline-block mb-4">
              <h1 className="text-2xl font-bold">JSL AI</h1>
              <p className="text-sm opacity-90">Propuls√© par l'Intelligence Artificielle</p>
            </div>
          </div>
          
          <h2 className="text-2xl font-bold text-gray-800 mb-2">Configuration</h2>
          <p className="text-gray-600 mb-6">Entrez votre cl√© API Gemini gratuite</p>
          
          <input
            type="password"
            value={apiKey}
            onChange={(e) => setApiKey(e.target.value)}
            placeholder="Cl√© API Gemini"
            className="w-full border-2 border-gray-300 rounded-lg px-4 py-3 focus:outline-none focus:border-indigo-500 mb-4"
          />

          <button
            onClick={saveApiKey}
            disabled={!apiKey.trim()}
            className="w-full bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-3 rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-all disabled:opacity-50 font-semibold"
          >
            Continuer
          </button>

          <div className="mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200">
            <p className="text-sm font-semibold text-gray-800 mb-2">Obtenir une cl√© gratuite:</p>
            <ol className="text-sm text-gray-700 space-y-1 list-decimal list-inside">
              <li><a href="https://makersuite.google.com/app/apikey" target="_blank" rel="noopener noreferrer" className="text-indigo-600 hover:underline">Google AI Studio</a></li>
              <li>Cr√©er une cl√© API</li>
              <li>Copier et coller ici</li>
            </ol>
          </div>
        </div>
      </div>
    );
  }

  // S√©lection secteur
  if (!selectedSector) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100">
        {/* Header avec logo */}
        <div className="bg-white shadow-lg border-b-2 border-indigo-200">
          <div className="max-w-7xl mx-auto px-6 py-4 flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className="bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-2 px-4 rounded-lg">
                <h1 className="text-xl font-bold">JSL AI</h1>
              </div>
              <div>
                <h2 className="text-2xl font-bold text-gray-800">Experts Professionnels</h2>
                <p className="text-sm text-gray-600">Consultations avec experts qu√©b√©cois</p>
              </div>
            </div>
            <button
              onClick={() => setShowApiInput(true)}
              className="text-sm text-indigo-600 hover:underline"
            >
              ‚öôÔ∏è Changer cl√© API
            </button>
          </div>
        </div>

        <div className="max-w-7xl mx-auto px-6 py-12">
          <div className="text-center mb-12">
            <h3 className="text-4xl font-bold text-gray-800 mb-4">
              Choisissez votre domaine d'expertise
            </h3>
            <p className="text-xl text-gray-600">
              Consultez des experts qu√©b√©cois dans leur domaine
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {Object.entries(sectors).map(([key, sector]) => (
              <div
                key={key}
                onClick={() => selectSector(key)}
                className={`bg-gradient-to-br ${sector.color} rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 cursor-pointer p-8 hover:scale-105 border-2 ${sector.borderColor} group`}
              >
                <div className="text-6xl mb-4 text-center group-hover:scale-110 transition-transform">{sector.icon}</div>
                <h3 className="text-2xl font-bold text-gray-800 text-center mb-3">
                  {sector.name}
                </h3>
                <p className="text-center text-gray-600 font-medium">
                  {sector.professions.length} experts disponibles
                </p>
              </div>
            ))}
          </div>
        </div>
      </div>
    );
  }

  // S√©lection m√©tier
  if (!selectedProfession) {
    const sector = sectors[selectedSector];
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100">
        {/* Header */}
        <div className="bg-white shadow-lg border-b-2 border-indigo-200">
          <div className="max-w-7xl mx-auto px-6 py-4">
            <div className="flex items-center gap-3 mb-2">
              <div className="bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-2 px-4 rounded-lg">
                <h1 className="text-xl font-bold">JSL AI</h1>
              </div>
            </div>
            <button
              onClick={resetToSectors}
              className="flex items-center gap-2 text-gray-700 hover:text-gray-900 font-semibold"
            >
              <ArrowLeft size={20} />
              Retour aux secteurs
            </button>
          </div>
        </div>

        <div className="max-w-7xl mx-auto px-6 py-12">
          <div className="text-center mb-12">
            <div className="text-6xl mb-4">{sector.icon}</div>
            <h3 className="text-4xl font-bold text-gray-800 mb-2">
              {sector.name}
            </h3>
            <p className="text-lg text-gray-600">
              S√©lectionnez votre expert professionnel
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            {sector.professions.map((profession) => (
              <div
                key={profession.id}
                onClick={() => selectProfession(profession)}
                className={`${profession.color} rounded-xl shadow-md hover:shadow-xl transition-all duration-300 cursor-pointer p-6 hover:scale-105 border-2 border-transparent hover:border-indigo-400`}
              >
                <div className="text-5xl mb-3 text-center">{profession.icon}</div>
                <h4 className="text-lg font-bold text-gray-800 text-center mb-2">
                  {profession.name}
                </h4>
                <p className="text-sm text-gray-600 text-center">
                  {profession.description}
                </p>
              </div>
            ))}
          </div>
        </div>
      </div>
    );
  }

  // Interface de chat
  const profile = professionalProfiles[selectedProfession.id];
  
  return (
    <div className="flex h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100">
      {/* Sidebar - Profil et Points Cl√©s */}
      <div className="w-80 bg-white shadow-xl border-r-2 border-indigo-200 overflow-y-auto">
        {/* Logo */}
        <div className="bg-gradient-to-r from-indigo-600 to-purple-600 text-white p-4 text-center">
          <h1 className="text-xl font-bold">JSL AI</h1>
          <p className="text-xs opacity-90">Intelligence Artificielle</p>
        </div>

        {/* Profil Expert */}
        <div className="p-6 border-b border-gray-200">
          <div className="flex items-center gap-3 mb-4">
            <div className="text-4xl">{selectedProfession.icon}</div>
            <div>
              <h3 className="font-bold text-gray-800">{profile.profile.name}</h3>
              <p className="text-xs text-gray-600">{profile.profile.credentials}</p>
            </div>
          </div>
          
          <div className="space-y-3">
            <div>
              <h4 className="text-sm font-semibold text-gray-700 mb-1 flex items-center gap-1">
                <User size={14} /> Sp√©cialit√©s
              </h4>
              <div className="flex flex-wrap gap-1">
                {profile.profile.specialties.map((spec, idx) => (
                  <span key={idx} className="text-xs bg-indigo-100 text-indigo-700 px-2 py-1 rounded">
                    {spec}
                  </span>
                ))}
              </div>
            </div>

            <div>
              <h4 className="text-sm font-semibold text-gray-700 mb-1 flex items-center gap-1">
                <BookOpen size={14} /> Sources fiables
              </h4>
              <div className="text-xs text-gray-600 space-y-1">
                {profile.profile.sources.slice(0, 3).map((source, idx) => (
                  <div key={idx}>‚Ä¢ {source}</div>
                ))}
              </div>
            </div>
          </div>
        </div>

        {/* Timer */}
        <div className="px-6 py-4 bg-indigo-50 border-b border-indigo-200">
          <div className="flex items-center justify-between">
            <span className="text-sm font-semibold text-gray-700 flex items-center gap-2">
              <Clock size={16} /> Dur√©e consultation
            </span>
            <span className="text-lg font-bold text-indigo-600">{formatTime(elapsedTime)}</span>
          </div>
        </div>

        {/* Points Cl√©s */}
        <div className="p-6 border-b border-gray-200">
          <h4 className="text-sm font-semibold text-gray-700 mb-3 flex items-center gap-1">
            <TrendingUp size={14} /> Points importants √† retenir
          </h4>
          {keyPoints.length > 0 ? (
            <div className="space-y-2">
              {keyPoints.slice(-5).map((point, idx) => (
                <div key={idx} className="text-xs bg-yellow-50 border-l-2 border-yellow-400 p-2 rounded">
                  {point}
                </div>
              ))}
            </div>
          ) : (
            <p className="text-xs text-gray-500 italic">Les points importants appara√Ætront ici...</p>
          )}
        </div>

        {/* Exemples de questions */}
        <div className="p-6 border-b border-gray-200">
          <h4 className="text-sm font-semibold text-gray-700 mb-3 flex items-center gap-1">
            <Lightbulb size={14} /> Questions sugg√©r√©es
          </h4>
          <div className="space-y-2">
            {profile.examples.map((example, idx) => (
              <button
                key={idx}
                onClick={() => setInputMessage(example)}
                className="w-full text-left text-xs bg-blue-50 hover:bg-blue-100 p-2 rounded border border-blue-200 transition-colors"
              >
                {example}
              </button>
            ))}
          </div>
        </div>

        {/* Limites */}
        <div className="p-6">
          <h4 className="text-sm font-semibold text-gray-700 mb-3 flex items-center gap-1">
            <AlertCircle size={14} /> Limites importantes
          </h4>
          <div className="space-y-2">
            {profile.limits.map((limit, idx) => (
              <div key={idx} className="text-xs text-gray-600 flex items-start gap-2">
                <span className="text-red-500 mt-0.5">‚Ä¢</span>
                <span>{limit}</span>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Zone de chat */}
      <div className="flex-1 flex flex-col">
        {/* Header Chat */}
        <div className="bg-white shadow-md border-b-2 border-indigo-200 p-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <button
                onClick={resetToProfessions}
                className="text-gray-600 hover:text-gray-800"
              >
                <ArrowLeft size={24} />
              </button>
              <div>
                <h2 className="text-xl font-bold text-gray-800">
                  Consultation avec {profile.profile.name}
                </h2>
                <p className="text-sm text-gray-600">{selectedProfession.description}</p>
              </div>
            </div>
            
            <div className="flex items-center gap-3">
              <button
                onClick={handleEmailSummary}
                className="flex items-center gap-2 bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors text-sm"
              >
                <Mail size={16} />
                Recevoir r√©sum√©
              </button>
              <button
                onClick={resetToSectors}
                className="flex items-center gap-2 bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors"
              >
                <RefreshCw size={18} />
                Nouveau
              </button>
            </div>
          </div>
        </div>

        {/* Messages */}
        <div className="flex-1 overflow-y-auto p-6">
          <div className="max-w-4xl mx-auto space-y-4">
            {messages.map((message, index) => (
              <div
                key={index}
                className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}
              >
                <div
                  className={`max-w-2xl rounded-2xl px-6 py-4 ${
                    message.role === 'user'
                      ? 'bg-gradient-to-r from-indigo-600 to-purple-600 text-white'
                      : 'bg-white text-gray-800 shadow-md border border-gray-200'
                  }`}
                >
                  <div className="whitespace-pre-wrap text-sm">
                    {message.parts[0].text}
                  </div>
                </div>
              </div>
            ))}
            {isLoading && (
              <div className="flex justify-start">
                <div className="bg-white rounded-2xl px-6 py-4 shadow-md border border-gray-200">
                  <div className="flex gap-2">
                    <div className="w-2 h-2 bg-indigo-600 rounded-full animate-bounce"></div>
                    <div className="w-2 h-2 bg-indigo-600 rounded-full animate-bounce" style={{animationDelay: '0.1s'}}></div>
                    <div className="w-2 h-2 bg-indigo-600 rounded-full animate-bounce" style={{animationDelay: '0.2s'}}></div>
                  </div>
                </div>
              </div>
            )}
            <div ref={messagesEndRef} />
          </div>
        </div>

        {/* Input */}
        <div className="bg-white border-t-2 border-indigo-200 p-4 shadow-lg">
          <div className="max-w-4xl mx-auto flex gap-3">
            <textarea
              value={inputMessage}
              onChange={(e) => setInputMessage(e.target.value)}
              onKeyPress={handleKeyPress}
              placeholder="Posez votre question √† l'expert..."
              className="flex-1 border-2 border-gray-300 rounded-xl px-4 py-3 focus:outline-none focus:border-indigo-500 resize-none"
              rows="2"
              disabled={isLoading}
            />
            <button
              onClick={sendMessage}
              disabled={!inputMessage.trim() || isLoading}
              className="bg-gradient-to-r from-indigo-600 to-purple-600 text-white px-6 py-3 rounded-xl hover:from-indigo-700 hover:to-purple-700 transition-all disabled:opacity-50 flex items-center gap-2"
            >
              <Send size={20} />
              Envoyer
            </button>
          </div>
        </div>
      </div>

      {/* Modal Email */}
      {showEmailModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full">
            <h3 className="text-2xl font-bold text-gray-800 mb-4">Recevoir le r√©sum√© par email</h3>
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="votre@email.com"
              className="w-full border-2 border-gray-300 rounded-lg px-4 py-3 mb-4 focus:outline-none focus:border-indigo-500"
            />
            <div className="flex gap-3">
              <button
                onClick={() => setShowEmailModal(false)}
                className="flex-1 bg-gray-200 text-gray-800 py-3 rounded-lg hover:bg-gray-300 transition-colors"
              >
                Annuler
              </button>
              <button
                onClick={sendEmail}
                disabled={!email.trim()}
                className="flex-1 bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-3 rounded-lg hover:from-indigo-700 hover:to-purple-700 transition-all disabled:opacity-50"
              >
                Envoyer
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ExpertChatbotPro;